{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\n\nvar _react = require(\"react\");\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _clockHand = require(\"./styles/clock-hand\");\n\nvar _math = require(\"../helpers/math\");\n\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\n\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\n\nfunction getAngle(mode, time) {\n  const increments = _constants.CLOCK_VALUES[mode].increments;\n  const value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\n\nfunction ClockHand(_ref) {\n  let {\n    mode,\n    time\n  } = _ref;\n  const prevState = (0, _react.useRef)({\n    time,\n    mode\n  });\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  const inner = time.hour > 0 && time.hour <= 12;\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner);\n  const [anim, api] = (0, _reactSpring.useSpring)(() => {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  });\n  const {\n    rotation,\n    length,\n    position\n  } = anim;\n  (0, _react.useEffect)(() => {\n    const current = rotation.get();\n    const next = getAngle(mode, time);\n\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      api.start({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand (without animation)\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      api.start({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, api, time]); // mini circle on clockhand between increments on minutes\n\n  const value = (0, _utils.getTimeValue)(mode, time);\n  let showIntermediateValueDisplay;\n\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _jsxRuntime.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n\n  return (0, _jsxRuntime.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\",\n    children: (0, _jsxRuntime.jsxs)(_reactSpring.animated.g, {\n      transform: rotation.to(a => rotate(a)),\n      children: [(0, _jsxRuntime.jsx)(_reactSpring.animated.line, {\n        className: \"react-timekeeper__clock-hand\",\n        css: _clockHand.line,\n        x1: _constants.CLOCK_RADIUS,\n        y1: _constants.CLOCK_RADIUS,\n        x2: _constants.CLOCK_RADIUS,\n        y2: length,\n        strokeWidth: \"1\",\n        \"data-testid\": \"clock-hand\"\n      }), (0, _jsxRuntime.jsx)(\"circle\", {\n        className: \"react-timekeeper__hand-circle-center\",\n        css: _clockHand.centerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: _constants.CLOCK_RADIUS,\n        r: 1.5\n      }), (0, _jsxRuntime.jsx)(_reactSpring.animated.circle, {\n        className: \"react-timekeeper__hand-circle-outer\",\n        css: _clockHand.outerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: position,\n        r: circleRadius\n      }), showIntermediateValueDisplay]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/Öykü/Desktop/CENG-416/node_modules/react-timekeeper/lib/components/ClockHand.js"],"names":["Object","defineProperty","exports","value","default","ClockHand","_react","require","_reactSpring","_utils","_constants","_clockHand","_math","_jsxRuntime","rotate","r","concat","CLOCK_RADIUS","getAngle","mode","time","increments","CLOCK_VALUES","getTimeValue","_ref","prevState","useRef","dragCount","inner","hour","handLength","getClockHandLength","circlePosition","getClockHandCirclePosition","circleRadius","getClockHandCircleRadius","anim","api","useSpring","immediate","rotation","length","position","useEffect","current","get","next","finalAngle","calcAnimationAngle","start","isSameTime","showIntermediateValueDisplay","MODE","MINUTES","jsx","className","css","intermediateMinuteCircle","cx","cy","NUMBER_OUTER_POSITION","width","CLOCK_SIZE","height","viewBox","xmlns","children","jsxs","animated","g","transform","to","a","line","x1","y1","x2","y2","strokeWidth","centerCircle","circle","outerCircle"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\n\nvar _react = require(\"react\");\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _clockHand = require(\"./styles/clock-hand\");\n\nvar _math = require(\"../helpers/math\");\n\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\n\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\n\nfunction getAngle(mode, time) {\n  const increments = _constants.CLOCK_VALUES[mode].increments;\n  const value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\n\nfunction ClockHand(_ref) {\n  let {\n    mode,\n    time\n  } = _ref;\n  const prevState = (0, _react.useRef)({\n    time,\n    mode\n  });\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  const inner = time.hour > 0 && time.hour <= 12;\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner);\n  const [anim, api] = (0, _reactSpring.useSpring)(() => {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  });\n  const {\n    rotation,\n    length,\n    position\n  } = anim;\n  (0, _react.useEffect)(() => {\n    const current = rotation.get();\n    const next = getAngle(mode, time);\n\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      api.start({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand (without animation)\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      api.start({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, api, time]); // mini circle on clockhand between increments on minutes\n\n  const value = (0, _utils.getTimeValue)(mode, time);\n  let showIntermediateValueDisplay;\n\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _jsxRuntime.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n\n  return (0, _jsxRuntime.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\",\n    children: (0, _jsxRuntime.jsxs)(_reactSpring.animated.g, {\n      transform: rotation.to(a => rotate(a)),\n      children: [(0, _jsxRuntime.jsx)(_reactSpring.animated.line, {\n        className: \"react-timekeeper__clock-hand\",\n        css: _clockHand.line,\n        x1: _constants.CLOCK_RADIUS,\n        y1: _constants.CLOCK_RADIUS,\n        x2: _constants.CLOCK_RADIUS,\n        y2: length,\n        strokeWidth: \"1\",\n        \"data-testid\": \"clock-hand\"\n      }), (0, _jsxRuntime.jsx)(\"circle\", {\n        className: \"react-timekeeper__hand-circle-center\",\n        css: _clockHand.centerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: _constants.CLOCK_RADIUS,\n        r: 1.5\n      }), (0, _jsxRuntime.jsx)(_reactSpring.animated.circle, {\n        className: \"react-timekeeper__hand-circle-outer\",\n        css: _clockHand.outerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: position,\n        r: circleRadius\n      }), showIntermediateValueDisplay]\n    })\n  });\n}"]},"metadata":{},"sourceType":"script"}