{"ast":null,"code":"import { get, getDatabase, child, ref, update, set, onValue } from \"firebase/database\";\nexport class SocialHandler {\n  static async getFriend(userId, recieverUid) {\n    return (await get(ref(this.database, \"friends/\" + userId + \"/\" + recieverUid))).val();\n  }\n\n  static async getFriendRequests(username) {\n    return (await get(ref(this.database, \"friendRequests/\" + username))).val();\n  }\n\n  static async getFriends(username) {\n    var res = (await get(ref(this.database, `friends/${username}`))).val();\n\n    if (res != null) {\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  static async sendFriendRequest(senderUsername, recieverUsername) {\n    set(ref(this.database, \"friendRequests/\" + recieverUsername + \"/\" + senderUsername), true);\n  }\n\n  static removeFriendRequest(username, senderUsername) {\n    set(ref(this.database, \"friendRequests/\" + username + \"/\" + senderUsername), {});\n  }\n\n  static acceptFriend(username, senderUsername) {\n    this.removeFriendRequest(username, senderUsername);\n    set(ref(this.database, \"friends/\" + username + \"/\" + senderUsername), true);\n    set(ref(this.database, \"friends/\" + senderUsername + \"/\" + username), true);\n  }\n\n  static async getUsername(username) {\n    return (await get(ref(this.database, \"userNames/\" + username))).val();\n  }\n\n  static sendMessage(eventId, userInfo, message) {\n    set(ref(this.database, \"eventComments/\" + eventId + \"/\" + `${+new Date()}`), {\n      username: userInfo.userName,\n      message: message\n    });\n  }\n\n  static listenMessagges(eventId, setState) {\n    onValue(ref(this.database, \"eventComments/\" + eventId), snapshot => {\n      const data = snapshot.val();\n      setState(data);\n    });\n  }\n\n}\nSocialHandler.database = getDatabase();","map":{"version":3,"sources":["C:/Users/Öykü/Desktop/CENG-416/src/database/SocialHandler.js"],"names":["get","getDatabase","child","ref","update","set","onValue","SocialHandler","getFriend","userId","recieverUid","database","val","getFriendRequests","username","getFriends","res","sendFriendRequest","senderUsername","recieverUsername","removeFriendRequest","acceptFriend","getUsername","sendMessage","eventId","userInfo","message","Date","userName","listenMessagges","setState","snapshot","data"],"mappings":"AAAA,SACEA,GADF,EAEEC,WAFF,EAGEC,KAHF,EAIEC,GAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,OAPF,QAQO,mBARP;AAUA,OAAO,MAAMC,aAAN,CAAoB;AAGH,eAATC,SAAS,CAACC,MAAD,EAAQC,WAAR,EAAqB;AACzC,WAAO,CAAC,MAAMV,GAAG,CAACG,GAAG,CAAC,KAAKQ,QAAN,EAAgB,aAAaF,MAAb,GAAsB,GAAtB,GAA4BC,WAA5C,CAAJ,CAAV,EAAyEE,GAAzE,EAAP;AACD;;AAE6B,eAAjBC,iBAAiB,CAACC,QAAD,EAAW;AACvC,WAAQ,CAAC,MAAMd,GAAG,CAACG,GAAG,CAAC,KAAKQ,QAAN,EAAgB,oBAAoBG,QAApC,CAAJ,CAAV,EAA8DF,GAA9D,EAAR;AACD;;AAEsB,eAAVG,UAAU,CAACD,QAAD,EAAW;AAChC,QAAIE,GAAG,GAAG,CAAC,MAAOhB,GAAG,CAACG,GAAG,CAAC,KAAKQ,QAAN,EAAgB,WAAUG,QAAS,EAAnC,CAAJ,CAAX,EAAwDF,GAAxD,EAAV;;AACA,QAAGI,GAAG,IAAI,IAAV,EAAe;AACb,aAAOA,GAAP;AACD,KAFD,MAEK;AACH,aAAO,EAAP;AACD;AACF;;AAE6B,eAAjBC,iBAAiB,CAACC,cAAD,EAAiBC,gBAAjB,EAAmC;AAC/Dd,IAAAA,GAAG,CACDF,GAAG,CACD,KAAKQ,QADJ,EAED,oBAAoBQ,gBAApB,GAAuC,GAAvC,GAA6CD,cAF5C,CADF,EAKD,IALC,CAAH;AAOD;;AACyB,SAAnBE,mBAAmB,CAACN,QAAD,EAAUI,cAAV,EAAyB;AACjDb,IAAAA,GAAG,CAACF,GAAG,CAAC,KAAKQ,QAAN,EAAe,oBAAkBG,QAAlB,GAA6B,GAA7B,GAAiCI,cAAhD,CAAJ,EAAoE,EAApE,CAAH;AACD;;AACkB,SAAZG,YAAY,CAACP,QAAD,EAAUI,cAAV,EAAyB;AACxC,SAAKE,mBAAL,CAAyBN,QAAzB,EAAkCI,cAAlC;AACAb,IAAAA,GAAG,CAACF,GAAG,CAAC,KAAKQ,QAAN,EAAe,aAAWG,QAAX,GAAsB,GAAtB,GAA0BI,cAAzC,CAAJ,EAA6D,IAA7D,CAAH;AACAb,IAAAA,GAAG,CAACF,GAAG,CAAC,KAAKQ,QAAN,EAAe,aAAWO,cAAX,GAA4B,GAA5B,GAAgCJ,QAA/C,CAAJ,EAA6D,IAA7D,CAAH;AACH;;AAEuB,eAAXQ,WAAW,CAACR,QAAD,EAAU;AAChC,WAAQ,CAAC,MAAMd,GAAG,CAACG,GAAG,CAAC,KAAKQ,QAAN,EAAe,eAAaG,QAA5B,CAAJ,CAAV,EAAsDF,GAAtD,EAAR;AACD;;AAEiB,SAAXW,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoBC,OAApB,EAA6B;AAC7CrB,IAAAA,GAAG,CACDF,GAAG,CAAC,KAAKQ,QAAN,EAAgB,mBAAmBa,OAAnB,GAA6B,GAA7B,GAAoC,GAAE,CAAC,IAAIG,IAAJ,EAAW,EAAlE,CADF,EAED;AAAEb,MAAAA,QAAQ,EAAEW,QAAQ,CAACG,QAArB;AAA+BF,MAAAA,OAAO,EAAEA;AAAxC,KAFC,CAAH;AAID;;AAEqB,SAAfG,eAAe,CAACL,OAAD,EAAUM,QAAV,EAAoB;AACxCxB,IAAAA,OAAO,CAACH,GAAG,CAAC,KAAKQ,QAAN,EAAgB,mBAAmBa,OAAnC,CAAJ,EAAkDO,QAAD,IAAc;AACpE,YAAMC,IAAI,GAAGD,QAAQ,CAACnB,GAAT,EAAb;AAEAkB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJM,CAAP;AAKD;;AAvDwB;AAAdzB,a,CACJI,Q,GAAWV,WAAW,E","sourcesContent":["import {\n  get,\n  getDatabase,\n  child,\n  ref,\n  update,\n  set,\n  onValue,\n} from \"firebase/database\";\n\nexport class SocialHandler {\n  static database = getDatabase();\n\n  static async getFriend(userId,recieverUid) {\n    return (await get(ref(this.database, \"friends/\" + userId + \"/\" + recieverUid))).val();\n  }\n\n  static async getFriendRequests(username) {\n    return  (await get(ref(this.database, \"friendRequests/\" + username))).val();\n  }\n\n  static async getFriends(username) {\n    var res = (await (get(ref(this.database,`friends/${username}`)))).val()\n    if(res != null){\n      return res\n    }else{\n      return []\n    }\n  }\n\n  static async sendFriendRequest(senderUsername, recieverUsername) {\n    set(\n      ref(\n        this.database,\n        \"friendRequests/\" + recieverUsername + \"/\" + senderUsername\n      ),\n      true\n    );\n  }\n  static removeFriendRequest(username,senderUsername){\n    set(ref(this.database,\"friendRequests/\"+username + \"/\"+senderUsername),{});\n  }\n  static acceptFriend(username,senderUsername){\n      this.removeFriendRequest(username,senderUsername)\n      set(ref(this.database,\"friends/\"+username + \"/\"+senderUsername),true);\n      set(ref(this.database,\"friends/\"+senderUsername + \"/\"+username),true);\n  }\n\n  static async getUsername(username){\n    return  (await get(ref(this.database,\"userNames/\"+username))).val()\n  }\n\n  static sendMessage(eventId, userInfo, message) {\n    set(\n      ref(this.database, \"eventComments/\" + eventId + \"/\" + `${+new Date()}`),\n      { username: userInfo.userName, message: message }\n    );\n  }\n\n  static listenMessagges(eventId, setState) {\n    onValue(ref(this.database, \"eventComments/\" + eventId), (snapshot) => {\n      const data = snapshot.val();\n\n      setState(data);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}