{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xD6yk\\xFC\\\\Desktop\\\\CENG-416\\\\src\\\\pages\\\\SelectHour.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TimeKeeper from \"react-timekeeper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelectHour(_ref) {\n  _s();\n\n  let {\n    name,\n    keyy\n  } = _ref;\n  const date = new Date();\n  const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n  const [time, setTime] = useState(`${date.getHours()}:${minutes}`);\n  const [showTime, setShowTime] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(keyy, time);\n  }, []);\n\n  const onChangeHandler = newTime => {\n    setTime(newTime.formatted24);\n    localStorage.setItem(keyy, newTime.formatted24);\n  };\n\n  const timeFunction = () => {\n    setShowTime(false);\n    localStorage.setItem(keyy, time);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showTime && /*#__PURE__*/_jsxDEV(TimeKeeper, {\n      time: time,\n      onChange: onChangeHandler,\n      hour24Mode: true,\n      closeOnMinuteSelect: true,\n      onDoneClick: timeFunction,\n      switchToMinuteOnHourSelect: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), !showTime && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border rounded-md w-2/3 h-8\",\n      onClick: () => setShowTime(true),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectHour, \"+doeNoAJJkEDr71B8+eb6RAW7ic=\");\n\n_c = SelectHour;\nexport default SelectHour;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectHour\");","map":{"version":3,"sources":["C:/Users/Öykü/Desktop/CENG-416/src/pages/SelectHour.jsx"],"names":["React","useEffect","useState","TimeKeeper","SelectHour","name","keyy","date","Date","minutes","getMinutes","time","setTime","getHours","showTime","setShowTime","localStorage","setItem","onChangeHandler","newTime","formatted24","timeFunction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAhB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgB;AAClC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,OAAO,GAAIF,IAAI,CAACG,UAAL,KAAoB,EAApB,GAA0B,IAAGH,IAAI,CAACG,UAAL,EAAkB,EAA/C,GAAmDH,IAAI,CAACG,UAAL,EAApE;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAE,GAAEK,IAAI,CAACM,QAAL,EAAgB,IAAGJ,OAAQ,EAA/B,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,YAAY,CAACC,OAAb,CAAqBX,IAArB,EAA0BK,IAA1B;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMO,eAAe,GAAGC,OAAD,IAAW;AAChCP,IAAAA,OAAO,CAACO,OAAO,CAACC,WAAT,CAAP;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqBX,IAArB,EAA0Ba,OAAO,CAACC,WAAlC;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBX,IAArB,EAA0BK,IAA1B;AACD,GAHD;;AAKA,sBACE;AAAA,eACGG,QAAQ,iBACP,QAAC,UAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,QAAQ,EAAEO,eAFZ;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,mBAAmB,EAAE,IAJvB;AAKE,MAAA,WAAW,EAAEG,YALf;AAME,MAAA,0BAA0B;AAN5B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYG,CAACP,QAAD,iBACC;AACE,MAAA,SAAS,EAAC,6BADZ;AAEE,MAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD,CAF5B;AAAA,6BAIE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAA,kBAAoBJ;AAApB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1CQP,U;;KAAAA,U;AA2CT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TimeKeeper from \"react-timekeeper\";\n\nfunction SelectHour({ name, keyy }) {\n  const date = new Date();\n  const minutes = (date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes())\n  const [time, setTime] = useState(`${date.getHours()}:${minutes}`);\n  const [showTime, setShowTime] = useState(false);\n\n  useEffect(()=>{\n    localStorage.setItem(keyy,time);\n  },[]);\n\n  const onChangeHandler= (newTime)=>{\n    setTime(newTime.formatted24)\n    localStorage.setItem(keyy,newTime.formatted24);\n  }\n  const timeFunction = () => {\n    setShowTime(false);\n    localStorage.setItem(keyy,time);\n  };\n\n  return (\n    <div >\n      {showTime && (\n        <TimeKeeper\n          time={time}\n          onChange={onChangeHandler}\n          hour24Mode={true}\n          closeOnMinuteSelect={true}\n          onDoneClick={timeFunction}\n          switchToMinuteOnHourSelect\n        />\n      )}\n\n      {!showTime && (\n        <button\n          className=\"border rounded-md w-2/3 h-8\"\n          onClick={() => setShowTime(true)}\n        >\n          <span className=\"\">{time}</span>\n        </button>\n      )}\n    </div>\n  );\n}\nexport default SelectHour;\n"]},"metadata":{},"sourceType":"module"}