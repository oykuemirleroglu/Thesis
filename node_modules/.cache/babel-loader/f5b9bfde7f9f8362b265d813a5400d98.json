{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateProvider = StateProvider;\nexports.default = useTimekeeperState;\nexports.stateContext = void 0;\n\nvar _react = require(\"react\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _time = require(\"../helpers/time\");\n\nvar _useConfigContext = _interopRequireDefault(require(\"./useConfigContext\"));\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _disableTime = _interopRequireDefault(require(\"../helpers/disable-time\"));\n\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst stateContext = /*#__PURE__*/(0, _react.createContext)({});\nexports.stateContext = stateContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TIME':\n      return { ...state,\n        time: action.time,\n        meridiem: action.meridiem || state.meridiem\n      };\n\n    case 'SET_MODE':\n      return { ...state,\n        mode: action.mode\n      };\n\n    case 'SET_MERIDIEM':\n      return { ...state,\n        meridiem: action.meridiem\n      };\n  }\n\n  return state;\n}\n\nfunction StateProvider(_ref) {\n  let {\n    onChange,\n    time: parentTime,\n    children,\n    disabledTimeRange\n  } = _ref;\n  const config = (0, _useConfigContext.default)();\n  const [state, dispatch] = (0, _react.useReducer)(reducer, null, () => {\n    return {\n      time: (0, _time.parseTime)(parentTime),\n      mode: config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12,\n      // need meridiem for context when 12h mode, so can tell\n      // if user is changing hours before or after 12pm\n      meridiem: (0, _time.parseMeridiem)(parentTime)\n    };\n  });\n  const {\n    mode,\n    time,\n    meridiem\n  } = state;\n  const refTime = (0, _react.useRef)(time); // store onChange as ref to memoize update fn\n\n  const onChangeFn = (0, _react.useRef)(onChange);\n  const onDoneClickFn = (0, _react.useRef)(config.onDoneClick);\n  (0, _react.useEffect)(() => {\n    onChangeFn.current = onChange;\n  }, [onChange]);\n  (0, _react.useEffect)(() => {\n    onDoneClickFn.current = config.onDoneClick;\n  }, [config.onDoneClick]);\n  const disabledTimeRangeValidator = (0, _react.useMemo)(() => {\n    const from = disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.from;\n    const to = disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.to;\n\n    if (!from || !to) {\n      return null;\n    }\n\n    return new _disableTime.default(from, to);\n  }, [disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.from, disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.to]); // handle time update if parent changes\n\n  (0, _react.useEffect)(() => {\n    if (parentTime == null) {\n      return;\n    }\n\n    const newTime = (0, _time.parseTime)(parentTime);\n\n    if ((0, _utils.isSameTime)(newTime, refTime.current)) {\n      return;\n    }\n\n    const action = {\n      type: 'SET_TIME',\n      time: (0, _time.parseTime)(parentTime)\n    };\n\n    if (!config.hour24Mode) {\n      action.meridiem = (0, _time.parseMeridiem)(parentTime);\n    }\n\n    dispatch(action);\n  }, [config.hour24Mode, parentTime]);\n  const getComposedTime = (0, _react.useCallback)(() => {\n    const time = refTime.current;\n    return (0, _time.composeTime)(time.hour, time.minute, disabledTimeRangeValidator);\n  }, [disabledTimeRangeValidator]); // debounced onChange function from parent\n\n  const debounceUpdateParent = (0, _react.useMemo)(() => {\n    return (0, _lodash.default)(() => {\n      typeof onChangeFn.current === 'function' && onChangeFn.current(getComposedTime());\n    }, 80);\n  }, [getComposedTime]); // update time on component and then on parent\n\n  const updateTime = (0, _react.useCallback)((newTime, meridiem) => {\n    // update component global state\n    dispatch({\n      type: 'SET_TIME',\n      time: newTime,\n      meridiem\n    });\n    refTime.current = newTime; // update time on parent\n\n    debounceUpdateParent();\n  }, [debounceUpdateParent]); // update 24 hour time on meridiem change\n\n  function updateMeridiem(newMeridiem) {\n    if (meridiem === newMeridiem) {\n      return;\n    }\n\n    const newTime = {\n      minute: time.minute,\n      hour: 0\n    };\n\n    if (newMeridiem === 'am') {\n      newTime.hour = time.hour - 12;\n    } else if (newMeridiem === 'pm') {\n      newTime.hour = time.hour + 12;\n    }\n\n    updateTime(newTime, newMeridiem);\n  }\n\n  const setMode = (0, _react.useCallback)(mode => {\n    let m = mode;\n\n    if ((0, _utils.isHourMode)(mode)) {\n      m = config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12;\n    }\n\n    dispatch({\n      type: 'SET_MODE',\n      mode: m\n    });\n  }, [config.hour24Mode]); // handle any side effects from changing the time (ie: change mode, trigger done clicks)\n\n  const handleUpdateTimeSideEffects = (0, _react.useCallback)(source => {\n    if (source.type === 'clock' && source.canAutoChangeMode) {\n      if (config.switchToMinuteOnHourSelect && (0, _utils.isHourMode)(mode)) {\n        setMode(_constants.MODE.MINUTES);\n      } else if (config.closeOnMinuteSelect && (0, _utils.isMinuteMode)(mode) && onDoneClickFn.current) {\n        onDoneClickFn.current(getComposedTime());\n      }\n    } else if (source.type === 'dropdown') {\n      if (config.switchToMinuteOnHourDropdownSelect && (0, _utils.isHourMode)(mode)) {\n        setMode(_constants.MODE.MINUTES);\n      }\n    }\n  }, [config.switchToMinuteOnHourSelect, config.closeOnMinuteSelect, config.switchToMinuteOnHourDropdownSelect, getComposedTime, mode, setMode]); // this method is called only due to changes in clock actions\n\n  const updateTimeValue = (0, _react.useCallback)((val, source) => {\n    // account if minutes is 60 (eg: 59 rounded to 60)\n    val = val % 60; // account for max number being 12 during 12h mode\n\n    if (mode === _constants.MODE.HOURS_12 && meridiem === 'pm') {\n      val += 12;\n    }\n\n    const unit = (0, _utils.isHourMode)(mode) ? 'hour' : 'minute';\n    const time = refTime.current; // perf to avoid unecessary updates when dragging on clock\n\n    if (time[unit] === val && source.type === 'clock' && !source.canAutoChangeMode) {\n      return;\n    } // if time is blocked off, dont update\n\n\n    if (disabledTimeRangeValidator) {\n      if ((0, _utils.isHourMode)(mode) && !disabledTimeRangeValidator.validateHour(val) || (0, _utils.isMinuteMode)(mode) && !disabledTimeRangeValidator.validateMinute(time.hour, val)) {\n        return;\n      }\n    }\n\n    handleUpdateTimeSideEffects(source); // generate new time and update timekeeper state\n\n    const newTime = { ...time,\n      [unit]: val\n    };\n    updateTime(newTime);\n  }, [mode, meridiem, handleUpdateTimeSideEffects, disabledTimeRangeValidator, updateTime]);\n  const value = {\n    time,\n    mode,\n    updateTimeValue,\n    updateMeridiem,\n    setMode,\n    getComposedTime,\n    disabledTimeRangeValidator,\n    meridiem\n  };\n  return (0, _jsxRuntime.jsx)(stateContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n\nfunction useTimekeeperState() {\n  return (0, _react.useContext)(stateContext);\n}","map":{"version":3,"sources":["C:/Users/Öykü/Desktop/CENG-416/node_modules/react-timekeeper/lib/hooks/useStateContext.js"],"names":["Object","defineProperty","exports","value","StateProvider","default","useTimekeeperState","stateContext","_react","require","_lodash","_interopRequireDefault","_time","_useConfigContext","_utils","_constants","_disableTime","_jsxRuntime","obj","__esModule","createContext","reducer","state","action","type","time","meridiem","mode","_ref","onChange","parentTime","children","disabledTimeRange","config","dispatch","useReducer","parseTime","hour24Mode","MODE","HOURS_24","HOURS_12","parseMeridiem","refTime","useRef","onChangeFn","onDoneClickFn","onDoneClick","useEffect","current","disabledTimeRangeValidator","useMemo","from","to","newTime","isSameTime","getComposedTime","useCallback","composeTime","hour","minute","debounceUpdateParent","updateTime","updateMeridiem","newMeridiem","setMode","m","isHourMode","handleUpdateTimeSideEffects","source","canAutoChangeMode","switchToMinuteOnHourSelect","MINUTES","closeOnMinuteSelect","isMinuteMode","switchToMinuteOnHourDropdownSelect","updateTimeValue","val","unit","validateHour","validateMinute","jsx","Provider","useContext"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateProvider = StateProvider;\nexports.default = useTimekeeperState;\nexports.stateContext = void 0;\n\nvar _react = require(\"react\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _time = require(\"../helpers/time\");\n\nvar _useConfigContext = _interopRequireDefault(require(\"./useConfigContext\"));\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _disableTime = _interopRequireDefault(require(\"../helpers/disable-time\"));\n\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst stateContext = /*#__PURE__*/(0, _react.createContext)({});\nexports.stateContext = stateContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TIME':\n      return { ...state,\n        time: action.time,\n        meridiem: action.meridiem || state.meridiem\n      };\n\n    case 'SET_MODE':\n      return { ...state,\n        mode: action.mode\n      };\n\n    case 'SET_MERIDIEM':\n      return { ...state,\n        meridiem: action.meridiem\n      };\n  }\n\n  return state;\n}\n\nfunction StateProvider(_ref) {\n  let {\n    onChange,\n    time: parentTime,\n    children,\n    disabledTimeRange\n  } = _ref;\n  const config = (0, _useConfigContext.default)();\n  const [state, dispatch] = (0, _react.useReducer)(reducer, null, () => {\n    return {\n      time: (0, _time.parseTime)(parentTime),\n      mode: config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12,\n      // need meridiem for context when 12h mode, so can tell\n      // if user is changing hours before or after 12pm\n      meridiem: (0, _time.parseMeridiem)(parentTime)\n    };\n  });\n  const {\n    mode,\n    time,\n    meridiem\n  } = state;\n  const refTime = (0, _react.useRef)(time); // store onChange as ref to memoize update fn\n\n  const onChangeFn = (0, _react.useRef)(onChange);\n  const onDoneClickFn = (0, _react.useRef)(config.onDoneClick);\n  (0, _react.useEffect)(() => {\n    onChangeFn.current = onChange;\n  }, [onChange]);\n  (0, _react.useEffect)(() => {\n    onDoneClickFn.current = config.onDoneClick;\n  }, [config.onDoneClick]);\n  const disabledTimeRangeValidator = (0, _react.useMemo)(() => {\n    const from = disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.from;\n    const to = disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.to;\n\n    if (!from || !to) {\n      return null;\n    }\n\n    return new _disableTime.default(from, to);\n  }, [disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.from, disabledTimeRange === null || disabledTimeRange === void 0 ? void 0 : disabledTimeRange.to]); // handle time update if parent changes\n\n  (0, _react.useEffect)(() => {\n    if (parentTime == null) {\n      return;\n    }\n\n    const newTime = (0, _time.parseTime)(parentTime);\n\n    if ((0, _utils.isSameTime)(newTime, refTime.current)) {\n      return;\n    }\n\n    const action = {\n      type: 'SET_TIME',\n      time: (0, _time.parseTime)(parentTime)\n    };\n\n    if (!config.hour24Mode) {\n      action.meridiem = (0, _time.parseMeridiem)(parentTime);\n    }\n\n    dispatch(action);\n  }, [config.hour24Mode, parentTime]);\n  const getComposedTime = (0, _react.useCallback)(() => {\n    const time = refTime.current;\n    return (0, _time.composeTime)(time.hour, time.minute, disabledTimeRangeValidator);\n  }, [disabledTimeRangeValidator]); // debounced onChange function from parent\n\n  const debounceUpdateParent = (0, _react.useMemo)(() => {\n    return (0, _lodash.default)(() => {\n      typeof onChangeFn.current === 'function' && onChangeFn.current(getComposedTime());\n    }, 80);\n  }, [getComposedTime]); // update time on component and then on parent\n\n  const updateTime = (0, _react.useCallback)((newTime, meridiem) => {\n    // update component global state\n    dispatch({\n      type: 'SET_TIME',\n      time: newTime,\n      meridiem\n    });\n    refTime.current = newTime; // update time on parent\n\n    debounceUpdateParent();\n  }, [debounceUpdateParent]); // update 24 hour time on meridiem change\n\n  function updateMeridiem(newMeridiem) {\n    if (meridiem === newMeridiem) {\n      return;\n    }\n\n    const newTime = {\n      minute: time.minute,\n      hour: 0\n    };\n\n    if (newMeridiem === 'am') {\n      newTime.hour = time.hour - 12;\n    } else if (newMeridiem === 'pm') {\n      newTime.hour = time.hour + 12;\n    }\n\n    updateTime(newTime, newMeridiem);\n  }\n\n  const setMode = (0, _react.useCallback)(mode => {\n    let m = mode;\n\n    if ((0, _utils.isHourMode)(mode)) {\n      m = config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12;\n    }\n\n    dispatch({\n      type: 'SET_MODE',\n      mode: m\n    });\n  }, [config.hour24Mode]); // handle any side effects from changing the time (ie: change mode, trigger done clicks)\n\n  const handleUpdateTimeSideEffects = (0, _react.useCallback)(source => {\n    if (source.type === 'clock' && source.canAutoChangeMode) {\n      if (config.switchToMinuteOnHourSelect && (0, _utils.isHourMode)(mode)) {\n        setMode(_constants.MODE.MINUTES);\n      } else if (config.closeOnMinuteSelect && (0, _utils.isMinuteMode)(mode) && onDoneClickFn.current) {\n        onDoneClickFn.current(getComposedTime());\n      }\n    } else if (source.type === 'dropdown') {\n      if (config.switchToMinuteOnHourDropdownSelect && (0, _utils.isHourMode)(mode)) {\n        setMode(_constants.MODE.MINUTES);\n      }\n    }\n  }, [config.switchToMinuteOnHourSelect, config.closeOnMinuteSelect, config.switchToMinuteOnHourDropdownSelect, getComposedTime, mode, setMode]); // this method is called only due to changes in clock actions\n\n  const updateTimeValue = (0, _react.useCallback)((val, source) => {\n    // account if minutes is 60 (eg: 59 rounded to 60)\n    val = val % 60; // account for max number being 12 during 12h mode\n\n    if (mode === _constants.MODE.HOURS_12 && meridiem === 'pm') {\n      val += 12;\n    }\n\n    const unit = (0, _utils.isHourMode)(mode) ? 'hour' : 'minute';\n    const time = refTime.current; // perf to avoid unecessary updates when dragging on clock\n\n    if (time[unit] === val && source.type === 'clock' && !source.canAutoChangeMode) {\n      return;\n    } // if time is blocked off, dont update\n\n\n    if (disabledTimeRangeValidator) {\n      if ((0, _utils.isHourMode)(mode) && !disabledTimeRangeValidator.validateHour(val) || (0, _utils.isMinuteMode)(mode) && !disabledTimeRangeValidator.validateMinute(time.hour, val)) {\n        return;\n      }\n    }\n\n    handleUpdateTimeSideEffects(source); // generate new time and update timekeeper state\n\n    const newTime = { ...time,\n      [unit]: val\n    };\n    updateTime(newTime);\n  }, [mode, meridiem, handleUpdateTimeSideEffects, disabledTimeRangeValidator, updateTime]);\n  const value = {\n    time,\n    mode,\n    updateTimeValue,\n    updateMeridiem,\n    setMode,\n    getComposedTime,\n    disabledTimeRangeValidator,\n    meridiem\n  };\n  return (0, _jsxRuntime.jsx)(stateContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n\nfunction useTimekeeperState() {\n  return (0, _react.useContext)(stateContext);\n}"]},"metadata":{},"sourceType":"script"}