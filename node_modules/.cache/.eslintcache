[{"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\index.js":"1","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\App.js":"2","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\store\\authContext.js":"3","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\LoginPage.jsx":"4","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\ForgetPasswordPage.jsx":"5","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\HomePage.jsx":"6","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\RegisterPage.jsx":"7","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\EventPage.jsx":"8","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\CreatePoll.jsx":"9","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\AddOption.jsx":"10","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\AddFriend.jsx":"11","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\Navbar.jsx":"12","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\firebase-config.js":"13","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\SocialHandler.js":"14","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\DatabaseHandler.js":"15","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\SelectHour.jsx":"16","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\DateOptionCard.jsx":"17","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\EventCard.jsx":"18","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\VoteDateOptionCard.jsx":"19","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\ChattBox.jsx":"20","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Notification.jsx":"21","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Alert.jsx":"22","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\RedirectingBanner.jsx":"23","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Banner.jsx":"24","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Modal.jsx":"25","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\FriendLists.jsx":"26","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\FriendList.jsx":"27","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\DeleteModal.jsx":"28","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\ParticipantList.jsx":"29","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\Chat.jsx":"30","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyFriendList.jsx":"31","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyFriend.jsx":"32","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyMessage.jsx":"33"},{"size":325,"mtime":1686518743963,"results":"34","hashOfConfig":"35"},{"size":1699,"mtime":1686518743943,"results":"36","hashOfConfig":"35"},{"size":1349,"mtime":1686518743970,"results":"37","hashOfConfig":"35"},{"size":10207,"mtime":1686520095702,"results":"38","hashOfConfig":"35"},{"size":1444,"mtime":1686518743966,"results":"39","hashOfConfig":"35"},{"size":8225,"mtime":1686520863782,"results":"40","hashOfConfig":"35"},{"size":13225,"mtime":1686519941360,"results":"41","hashOfConfig":"35"},{"size":13595,"mtime":1686518743966,"results":"42","hashOfConfig":"35"},{"size":17359,"mtime":1686521266105,"results":"43","hashOfConfig":"35"},{"size":6906,"mtime":1686518743964,"results":"44","hashOfConfig":"35"},{"size":4851,"mtime":1686521014154,"results":"45","hashOfConfig":"35"},{"size":6467,"mtime":1686520952073,"results":"46","hashOfConfig":"35"},{"size":1340,"mtime":1686518743960,"results":"47","hashOfConfig":"35"},{"size":1829,"mtime":1686518743960,"results":"48","hashOfConfig":"35"},{"size":7501,"mtime":1686518743959,"results":"49","hashOfConfig":"35"},{"size":1247,"mtime":1686518743968,"results":"50","hashOfConfig":"35"},{"size":2830,"mtime":1686518743954,"results":"51","hashOfConfig":"35"},{"size":3312,"mtime":1686518743955,"results":"52","hashOfConfig":"35"},{"size":11513,"mtime":1686518743958,"results":"53","hashOfConfig":"35"},{"size":8191,"mtime":1686518743954,"results":"54","hashOfConfig":"35"},{"size":2945,"mtime":1686518743950,"results":"55","hashOfConfig":"35"},{"size":955,"mtime":1686518743945,"results":"56","hashOfConfig":"35"},{"size":1461,"mtime":1686518743950,"results":"57","hashOfConfig":"35"},{"size":2132,"mtime":1686518743945,"results":"58","hashOfConfig":"35"},{"size":3337,"mtime":1686518743949,"results":"59","hashOfConfig":"35"},{"size":1793,"mtime":1686518743949,"results":"60","hashOfConfig":"35"},{"size":6394,"mtime":1686518743948,"results":"61","hashOfConfig":"35"},{"size":5200,"mtime":1686518743946,"results":"62","hashOfConfig":"35"},{"size":4830,"mtime":1686518743957,"results":"63","hashOfConfig":"35"},{"size":1089,"mtime":1686518743953,"results":"64","hashOfConfig":"35"},{"size":548,"mtime":1686518743947,"results":"65","hashOfConfig":"35"},{"size":548,"mtime":1686518743947,"results":"66","hashOfConfig":"35"},{"size":453,"mtime":1686518743948,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"1ofwsxe",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"71"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"71"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"71"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"71"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"71"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"71"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"71"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"71"},"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\index.js",[],[],["188","189"],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\App.js",["190"],[],"import React, { useContext, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport ForgetPasswordPage from \"./pages/ForgetPasswordPage\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport EventPage from \"./pages/EventPage\";\r\nimport AuthContext from \"./store/authContext\";\r\nimport CreatePoll from \"./pages/CreatePoll\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Addfriend from \"./pages/AddFriend\";\r\nimport AddOption from \"./pages/AddOption\";\r\n\r\nexport default function App() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n              isLogged={authCtx.isLoggedIn}\r\n              showGreetingMessage={authCtx.showGreetingMessage}\r\n              setShowGreetingMessage={authCtx.setShowGreetingMessage}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/loginPage\" element={<LoginPage />} />\r\n        <Route path=\"/registerPage\" element={<RegisterPage />} />\r\n        <Route path=\"/forgetPasswordPage\" element={<ForgetPasswordPage />} />\r\n        <Route path=\"/addfriend\" element={<Addfriend />} />\r\n        <Route path=\"/eventPage/:id/addoption\" element={<AddOption />} />\r\n        <Route\r\n          path=\"/eventPage/:id\"\r\n          element={<EventPage isLogged={authCtx.isLoggedIn} />}\r\n        />\r\n        <Route\r\n          path=\"/createPoll\"\r\n          element={<CreatePoll isLogged={authCtx.isLoggedIn} />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\store\\authContext.js",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\LoginPage.jsx",["191","192","193","194","195","196","197"],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\ForgetPasswordPage.jsx",["198"],[],"import React, { Fragment } from 'react'\r\nimport { useState } from \"react\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../App.css'\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default function ForgetPasswordPage() {\r\n    const [inputs, setInputs] = useState({});\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(inputs);\r\n      }\r\n    return (\r\n        <Fragment>\r\n\r\n        <div className=\"text-center m-5-auto\">\r\n            <h2>Reset your password</h2>\r\n            <h5>Enter your email address and we will send you a new password</h5>\r\n            <form action=\"/login\" onSubmit={handleSubmit}>\r\n                <p>\r\n                    <label id=\"reset_pass_lbl\">Email address</label><br/>\r\n                    <input type=\"email\" name=\"email\" value={inputs.email} \r\n                            onChange={handleChange} required />\r\n                </p><br/>\r\n                <p>\r\n                    <button id=\"sub_btn\" type=\"submit\">Send password reset email</button>\r\n                </p>\r\n            </form>\r\n            <footer>\r\n                <p><Link to=\"/register\">Create an account</Link>.</p>\r\n            </footer>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\HomePage.jsx",["199","200","201","202","203"],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\RegisterPage.jsx",["204"],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\EventPage.jsx",["205","206","207","208","209","210","211","212","213"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport VoteDateOption from \"../components/VoteDateOptionCard\";\r\nimport { DatabaseHandler } from \"../database/DatabaseHandler\";\r\nimport ChattBox from \"../components/ChattBox\";\r\nimport Notify from \"../UI/Modal\";\r\nimport Banner from \"../UI/Banner\";\r\nimport { SocialHandler } from \"../database/SocialHandler\";\r\nimport Alert from \"../UI/Alert\";\r\n\r\nconst EventPage = (props) => {\r\n  //const { station } = useParams();\r\n  const eventInfo = useLocation().state[\"event\"];\r\n  eventInfo.options.map((opt, index) => (opt[\"id\"] = index));\r\n  const navigate = useNavigate();\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const [messages, setMessages] = useState([]);\r\n  const [eventOpt, setEventOpt] = useState(eventInfo.options);\r\n  const [votes, setVotes] = useState({ comings: [], Ncomings: [], ifNeed: [] });\r\n  const [error,setError] = useState(false);\r\n  const [showMessage,setShowMessage] = useState(false);\r\n  const[isChecked, setIsChecked] = useState(false);\r\n  const [checkedOptId, setCheckedOptId] = useState();\r\n\r\n  const checkedOrNot = (isCheckedFromChild,dateId) => {\r\n    setCheckedOptId(dateId);\r\n\r\n    if(isCheckedFromChild == 1) {\r\n      setIsChecked(false);\r\n      console.log(dateId);\r\n    }\r\n    else {\r\n      setIsChecked(true);\r\n      console.log(dateId);\r\n    }\r\n  }\r\n\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  let selectedDates = {};\r\n\r\n  useEffect(async () => {\r\n    SocialHandler.listenMessagges(eventInfo[\"id\"], setMessages);\r\n    DatabaseHandler.listenEventOptions(eventInfo[\"id\"],setEventOpt);\r\n    if(eventInfo.endOptionId != undefined){\r\n      setCheckedOptId(eventInfo.endOptionId.id)\r\n    }\r\n    const rVotes = await DatabaseHandler.getVotes(eventInfo.id);\r\n    console.log(eventInfo[\"limit\"]);\r\n    setVotes(rVotes);\r\n    setLoading(false);\r\n  }, []);\r\n  const selectedDatesHandler = (optId, status) => {\r\n    selectedDates[optId] = status;\r\n  };\r\n  const submitHandler = () => {\r\n    console.log(selectedDates)\r\n    if(eventInfo[\"isOpen\"] == true){\r\n      DatabaseHandler.submitVote(eventInfo.id, userInfo.userName, selectedDates);\r\n    //modal çıkartılabilir.\r\n    window.location.reload();\r\n    }else{\r\n\r\n      setError(true);\r\n    }\r\n    \r\n    //console.log(userInfo.userName,selectedDates);\r\n  };\r\n\r\n  const endEventHandler = (event)=>{\r\n    event.preventDefault();\r\n    //console.log(eventInfo[\"options\"][checkedOptId])\r\n    DatabaseHandler.endEvent(eventInfo[\"id\"],eventInfo[\"options\"][checkedOptId])\r\n    setShowMessage(true)\r\n    \r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      {showMessage && (\r\n        <Notify\r\n          navigate={navigate}\r\n          route={\"/\"}\r\n          routePageMessage={\"Go to Home Page !\"}\r\n          title={`You end the event.`}\r\n          message={`You decided ${eventInfo[\"options\"][checkedOptId][\"date\"]} date for this event.`}\r\n        />\r\n      )}\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n        <div className=\"px-4 py-4 sm:px-6\">\r\n          <h3 className=\"text-lg leading-6 font-medium text-black-900\">\r\n            {eventInfo.title}\r\n            {!(eventInfo.isOpen) && <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-gray-800 text-xs font-medium bg-red-100 rounded-full ml-3\">\r\n      {\"The date of this event has been set\"}\r\n    </span>}\r\n          </h3>\r\n        </div>\r\n        <div className=\"border-t border-gray-200 sm:p-0 md:p-4 mb-2\">\r\n          <dl className=\"sm:divide-y sm:divide-gray-200\">\r\n            <div className=\"py-2 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 px-2\">\r\n              <dt className=\"text-sm flex mb-3 font-medium text-black-500\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-5\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                  />\r\n                </svg>\r\n                Creator\r\n              </dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {eventInfo.creatorName}\r\n              </dd>\r\n            </div>\r\n            <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 px-2\">\r\n              <dt className=\"text-sm flex font-medium text-black-500\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n                  />\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                  />\r\n                </svg>\r\n                Location\r\n              </dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {eventInfo.location}\r\n              </dd>\r\n            </div>\r\n            <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 px-2\">\r\n              <dt className=\"text-sm flex font-medium text-black-500\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M4 6h16M4 12h16M4 18h7\"\r\n                  />\r\n                </svg>\r\n                Description\r\n              </dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {eventInfo.description}\r\n              </dd>\r\n            </div>\r\n            <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 px-2\">\r\n              <div className=\"flex mt-8\">Availabilities</div>\r\n              <div>\r\n                <span className=\"flex\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"Green\"\r\n                    strokeWidth=\"2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                    />\r\n                  </svg>\r\n                  Yes\r\n                </span>\r\n                <span className=\"flex\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"Orange\"\r\n                    strokeWidth=\"2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\r\n                    />\r\n                  </svg>\r\n                  if need be\r\n                </span>\r\n                <span className=\"flex\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"Red\"\r\n                    strokeWidth=\"2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                    />\r\n                  </svg>\r\n                  cannot attend\r\n                </span>\r\n                <span className=\"flex\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"darkgray\"\r\n                    strokeWidth=\"2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                    />\r\n                  </svg>\r\n                  pending\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {/* <ul\r\n              role=\"list\"\r\n              className=\"flex justify-end gap-6 sm:grid-cols-2 lg:grid-cols-3 container\"\r\n            >\r\n              <OptionsCard option={eventInfo} />\r\n            </ul>\r\n            {Object.keys(eventInfo.participants).map((participant, index) => (\r\n              <div key={index}>\r\n                <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n                  {participant}\r\n                  <input type=\"checkbox\"></input>\r\n                </div>\r\n              </div>\r\n            ))} */}\r\n          </dl>\r\n\r\n          <div className=\"relative\">\r\n            <div\r\n              className=\"absolute inset-0 flex items-center\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"w-full border-t border-gray-300\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center\">\r\n              <span className=\"px-3 bg-white text-lg font-medium text-gray-900\">\r\n                Options\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {loading ? (\r\n            <Banner message={\"Options are loading...\"} />\r\n          ) : (\r\n            <div className=\"grid sm:grid-cols-1 md:grid-cols-3 rounded-lg divide-gray-200\">\r\n              {eventOpt.map((option) => (\r\n                <VoteDateOption\r\n                  eventInfo={eventInfo}\r\n                  Checked = {checkedOrNot}\r\n                  creator={option[\"creatorName\"]}\r\n                  userName={userInfo.userName}\r\n                  comings={votes[\"comings\"][option.id]}\r\n                  Ncomings={votes[\"Ncomings\"][option.id]}\r\n                  ifNeed={votes[\"ifNeed\"][option.id]}\r\n                  key={option.id}\r\n                  selectedDateId={checkedOptId}\r\n                  handleSelectedDates={selectedDatesHandler}\r\n                  optInfo={option}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex justify-center mt-4 ml-24\">\r\n          \r\n          \r\n          {error ==true ? (\r\n            <Alert\r\n              title={\"Final date has been set\"}\r\n              messages={[\"Event's date has been set.You can not submit your votes.\"]}\r\n            />\r\n          ):(\r\n          <>\r\n          <button\r\n            onClick={submitHandler}\r\n            className=\"flex justify-center py-2 px-4 border border-transparent text-base font-medium rounded-md text-white bg-red-700 hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mb-4\"\r\n          >\r\n            Submit Votes\r\n          </button>\r\n        \r\n        <Link to={\"/eventPage\" + \"/\" + eventInfo[\"id\"] +\"/addoption\"} state={eventInfo}>\r\n          <button\r\n            className=\"flex justify-center py-2 px-4 border border-transparent text-base font-medium rounded-md text-white bg-green-700 hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mb-4\"\r\n            type=\"button\"\r\n            \r\n          >\r\n            Add New Date Option\r\n          </button>\r\n          </Link></>)}\r\n            \r\n            \r\n            \r\n          </div>\r\n          \r\n          <ChattBox\r\n            user={userInfo}\r\n            messages={messages}\r\n            eventId={eventInfo[\"id\"]}\r\n          />\r\n\r\n          \r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n            {userInfo[\"userName\"] === eventInfo[\"creatorName\"] && <button\r\n              onClick={endEventHandler}\r\n              className=\"inline-flex items-center px-6 py-4 border border-transparent text-base font-medium rounded-full shadow-sm text-white bg-red-700 rounded-md hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2\"\r\n            >\r\n              Set desicion\r\n            </button>}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\CreatePoll.jsx",["214","215","216","217","218","219","220","221","222"],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\AddOption.jsx",["223","224"],[],"import React, { useState } from \"react\";\r\nimport SelectHour from \"./SelectHour\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport DateOptionCard from \"../components/DateOptionCard\";\r\nimport Alert from \"../UI/Alert\";\r\nimport { DatabaseHandler } from \"../database/DatabaseHandler\";\r\n\r\nconst AddOption = () => {\r\n  const eventInfo = useLocation().state;\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const [isOptionEmpty, setIsOptionEmpty] = useState(true);\r\n  const [isOptionEmptyError, setIsOptionEmptyError] = useState(false);\r\n  const [optError, setOptError] = useState(false);\r\n  const [alreadyError, setAlreadyError] = useState(false);\r\n  const [noOptionError,setNoOptionError] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const[optHoursError,setOptHoursError] = useState(false);\r\n  var err = false;\r\n  var alreadyerr = false;\r\n  const addOptionHandler = () => {\r\n    const sTime = localStorage.getItem(\"startTime\");\r\n    const eTime = localStorage.getItem(\"endTime\");\r\n    if (\r\n      sTime === undefined ||\r\n      eTime === undefined ||\r\n      (enteredStartDate === undefined || enteredStartDate === \"\")\r\n    ) {\r\n      setIsOptionEmptyError(true);\r\n    } else {\r\n      let newOpt = { date: enteredStartDate, startTime: sTime, endTime: eTime,creatorName: userInfo[\"userName\"] };\r\n      Object.keys(eventInfo[\"options\"]).forEach((key) => {\r\n        console.log(eventInfo[\"options\"][key],sTime)\r\n        if (\r\n          enteredStartDate === eventInfo[\"options\"][key][\"date\"] &&\r\n          sTime === eventInfo[\"options\"][key][\"startTime\"] &&\r\n          eTime === eventInfo[\"options\"][key][\"endTime\"]\r\n        ) {\r\n          setAlreadyError(true)\r\n          alreadyerr = true\r\n        }\r\n      });\r\n      if(!(alreadyerr)){\r\n        options.forEach((option) => {\r\n          if (\r\n            option[\"date\"] === enteredStartDate &&\r\n            option[\"startTime\"] == sTime &&\r\n            option[\"endTime\"] == eTime\r\n          ) {\r\n            err = true;\r\n            setOptError(true);\r\n          }\r\n        });\r\n        if (!err) {\r\n          if(sTime === eTime || sTime > eTime){\r\n            console.log(sTime,eTime)\r\n            setOptHoursError(true);\r\n         }else{\r\n          setOptions((values) => [...values, newOpt]);\r\n          setAlreadyError(false);\r\n          setIsOptionEmpty(false);\r\n          setOptError(false);\r\n          setIsOptionEmptyError(false);\r\n          setOptHoursError(false);\r\n         }\r\n          \r\n        }\r\n\r\n      }\r\n      console.log(options);\r\n    }\r\n  };\r\n  const [enteredStartDate, setEnteredStartDate] = useState();\r\n  const startDateChangeHandler = (event) => {\r\n    setEnteredStartDate(event.target.value);\r\n    setIsOptionEmptyError(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(options.length === 0){\r\n      setNoOptionError(true)\r\n    }else{\r\n      DatabaseHandler.setCustomDateOption(eventInfo[\"id\"],eventInfo[\"options\"],options)\r\n      navigate(-1);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const cancel = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"sm:w-full md:w-1/2  md:mx-auto space-y-8 divide-y divide-gray-200 sm:space-y-5 divide-gray-200 mt-14 mr-20 ml-20 mb-2\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"pt-8\">\r\n          <h1 className=\"text-lg leading-6 text-xl text-gray-900 font-semibold mb-4\">\r\n            What is your recommendation ?\r\n          </h1>\r\n          <div className=\"sm:flex sm:flex-col md:grid md:grid-cols-3\">\r\n            <div className=\"col-span-1 sm:ml-0 md:ml-16\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mr-2\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={enteredStartDate}\r\n                onChange={startDateChangeHandler}\r\n                className=\" focus:ring-indigo-500 border focus:border-indigo-500 w-2/3 block h-8  rounded-md sm:text-sm border-gray-300\"\r\n                placeholder=\"startDate\"\r\n              />\r\n            </div>\r\n            <div className=\"col-span-1 sm:ml-0 md:ml-16\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Start Time:\r\n              </label>\r\n              <SelectHour name=\"Start Time\" keyy={\"startTime\"} />\r\n            </div>\r\n            <div className=\"col-span-1 sm:ml-0 md:ml-16\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Finish Time:\r\n              </label>\r\n              <SelectHour name=\"Finish Time\" keyy={\"endTime\"} />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-center mt-4 ml-24\">\r\n            <button\r\n              className=\"flex justify-center py-1 px-2 border border-transparent text-base font-medium rounded-md text-white bg-blue-700 hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              onClick={addOptionHandler}\r\n              type=\"button\"\r\n            >\r\n              Add Option\r\n            </button>\r\n            <button\r\n              className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-black bg-white-700 hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          {!isOptionEmpty && <DateOptionCard options={options} />}\r\n          {optError && (\r\n            <Alert\r\n              title={\"Opps!\"}\r\n              messages={[\"You can not add same option again\"]}\r\n            />\r\n          )}\r\n          {isOptionEmptyError && !(noOptionError) && (\r\n            <Alert\r\n              title=\"You forgot to set the date !\"\r\n              messages={[\"You have to set a date first.\"]}\r\n            />\r\n          )}\r\n          {alreadyError && <Alert\r\n              title=\"Existed date option !\"\r\n              messages={[\"There is a date option like that in the poll.\"]}\r\n            />}\r\n            {noOptionError && <Alert\r\n              title=\"Add an option first !\"\r\n              messages={[\"Please add at least one date option.\"]}\r\n            />}\r\n            {optHoursError && <Alert title={\"Opps!\"} messages={[\"There is inconsistency in the times.\"]}/>}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"flex justify-center py-1 px-2 border border-transparent text-base font-medium rounded-md text-white bg-blue-700 hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddOption;\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\AddFriend.jsx",["225","226","227","228"],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\firebase-config.js",["229","230"],[],"// Import the functions you need from the SDKs you need\r\n\r\nimport { initializeApp,getApps,getApp } from \"firebase/app\";\r\nimport {getAuth,GoogleAuthProvider} from 'firebase/auth';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n//First one\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyCiGtA9NHnFJ4TN1PxAbDgHl7UXfcjMoRM\",\r\n\r\n  authDomain: \"scheduleasy-d17f5.firebaseapp.com\",\r\n\r\n  projectId: \"scheduleasy-d17f5\",\r\n\r\n  storageBucket: \"scheduleasy-d17f5.appspot.com\",\r\n\r\n  messagingSenderId: \"645588070028\",\r\n\r\n  appId: \"1:645588070028:web:b8d041823b7e552c9995a9\"\r\n\r\n};\r\n\r\n\r\n\r\n//Second One (for presentation)\r\n// const firebaseConfig = {\r\n\r\n//   apiKey: \"AIzaSyCquiYBemUf1DPT4PAIwhnENQZAdvuCT6E\",\r\n\r\n//   authDomain: \"scheduleasy2.firebaseapp.com\",\r\n\r\n//   databaseURL: \"https://scheduleasy2-default-rtdb.firebaseio.com\",\r\n\r\n//   projectId: \"scheduleasy2\",\r\n\r\n//   storageBucket: \"scheduleasy2.appspot.com\",\r\n\r\n//   messagingSenderId: \"331607045820\",\r\n\r\n//   appId: \"1:331607045820:web:32d38e86e4a613aecd02b9\"\r\n\r\n// };\r\n\r\n\r\n// Initialize Firebase\r\n\r\n//const app = !getApps().length ? initializeApp(firebaseConfig) : getApp()\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\SocialHandler.js",["231","232","233"],[],"import {\r\n  get,\r\n  getDatabase,\r\n  child,\r\n  ref,\r\n  update,\r\n  set,\r\n  onValue,\r\n} from \"firebase/database\";\r\n\r\nexport class SocialHandler {\r\n  static database = getDatabase();\r\n\r\n  static async getFriend(userId,recieverUid) {\r\n    return (await get(ref(this.database, \"friends/\" + userId + \"/\" + recieverUid))).val();\r\n  }\r\n\r\n  static async getFriendRequests(username) {\r\n    return  (await get(ref(this.database, \"friendRequests/\" + username))).val();\r\n  }\r\n\r\n  static async getFriends(username) {\r\n    var res = (await (get(ref(this.database,`friends/${username}`)))).val()\r\n    if(res != null){\r\n      return res\r\n    }else{\r\n      return []\r\n    }\r\n  }\r\n\r\n  static async sendFriendRequest(senderUsername, recieverUsername) {\r\n    set(\r\n      ref(\r\n        this.database,\r\n        \"friendRequests/\" + recieverUsername + \"/\" + senderUsername\r\n      ),\r\n      true\r\n    );\r\n  }\r\n  static removeFriendRequest(username,senderUsername){\r\n    set(ref(this.database,\"friendRequests/\"+username + \"/\"+senderUsername),{});\r\n  }\r\n  static acceptFriend(username,senderUsername){\r\n      this.removeFriendRequest(username,senderUsername)\r\n      set(ref(this.database,\"friends/\"+username + \"/\"+senderUsername),true);\r\n      set(ref(this.database,\"friends/\"+senderUsername + \"/\"+username),true);\r\n  }\r\n\r\n  static async getUsername(username){\r\n    return  (await get(ref(this.database,\"userNames/\"+username))).val()\r\n  }\r\n\r\n  static sendMessage(eventId, userInfo, message) {\r\n    set(\r\n      ref(this.database, \"eventComments/\" + eventId + \"/\" + `${+new Date()}`),\r\n      { username: userInfo.userName, message: message }\r\n    );\r\n  }\r\n\r\n  static listenMessagges(eventId, setState) {\r\n    onValue(ref(this.database, \"eventComments/\" + eventId), (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      setState(data);\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\database\\DatabaseHandler.js",["234","235","236","237","238"],[],"import {\r\n  get,\r\n  getDatabase,\r\n  child,\r\n  ref,\r\n  update,\r\n  set,\r\n  onValue,\r\n  remove,\r\n\r\n} from \"firebase/database\";\r\nimport { initializeApp,getApps,getApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyCiGtA9NHnFJ4TN1PxAbDgHl7UXfcjMoRM\",\r\n\r\n  authDomain: \"scheduleasy-d17f5.firebaseapp.com\",\r\n\r\n  projectId: \"scheduleasy-d17f5\",\r\n\r\n  storageBucket: \"scheduleasy-d17f5.appspot.com\",\r\n\r\n  messagingSenderId: \"645588070028\",\r\n\r\n  appId: \"1:645588070028:web:b8d041823b7e552c9995a9\"\r\n\r\n};\r\nfunction generateId() {\r\n  var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var token = \"\";\r\n  for (var i = 0; i < 28; i++) {\r\n    token += chars[Math.floor(Math.random() * chars.length)];\r\n  }\r\n  return token;\r\n}\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\nconst db = getDatabase(app);\r\nexport class DatabaseHandler {\r\n  static database = getDatabase();\r\n\r\n  static registerUserData(userId, userName, email, birthDate, majority) {\r\n    set(ref(this.database, \"users/\" + userId), {\r\n      userName: userName,\r\n      email: email,\r\n      birthDate: birthDate,\r\n      majority: majority,\r\n    });\r\n    set(ref(this.database, \"userNames/\" + userName), { uid: userId });\r\n  }\r\n\r\n\r\n  static createEvent(allEventInfo) {\r\n    //participant nodes is being pushed under the eventId node. it must be deleted\r\n\r\n    const event_Id = generateId();\r\n    console.log(allEventInfo);\r\n    const db_event_node = {};\r\n    const db_event_participants = {};\r\n\r\n    const db_options = {};\r\n\r\n    allEventInfo.options.forEach((opt, index) => db_options[index] = opt);\r\n    allEventInfo.options = db_options;\r\n    console.log(allEventInfo.participants)\r\n    set(ref(this.database, \"events/\" + event_Id), allEventInfo);\r\n\r\n    set(\r\n      ref(\r\n        this.database,\r\n        \"userEvents/\" + allEventInfo.creatorName + \"/\" + event_Id\r\n      ),\r\n      true\r\n    );\r\n    db_event_participants[allEventInfo.creatorName] = true;\r\n    Object.values(allEventInfo.participants).forEach((participant) => {\r\n      db_event_participants[participant] = true;\r\n      set(\r\n        ref(this.database, \"userEvents/\" + participant + \"/\" + event_Id),\r\n        true\r\n      );\r\n    });\r\n\r\n    set(\r\n      ref(this.database, \"participantsOfEvent/\" + event_Id),\r\n      db_event_participants\r\n    ); // Wrong must be {huxies:true} but {0:true}\r\n    //it could be addUserToEvent(userName) func to call here to be more modular for the incoming invitations\r\n  }\r\n\r\n  static async getUserVote(eventId,username){\r\n      var res =  (await (get(ref(this.database,\"participantsOfEvent/\"+eventId +\"/\"+username)))).val()\r\n      var returnedList = [];\r\n      if (res!=null){\r\n        res.forEach((vote)=> {\r\n          if(vote != \"\"){\r\n            returnedList.push(vote);\r\n          }\r\n        })\r\n      }\r\n      \r\n      return returnedList\r\n    }\r\n\r\n  static async getUserName(userId) {\r\n    let userName = (\r\n      await get(child(ref(this.database), `users/${userId}/userName`))\r\n    ).val();\r\n    console.log(userName, \"dbhandler\");\r\n    return userName;\r\n  }\r\n\r\n  static async isUserExist(userName) {\r\n    let exists = (\r\n      await get(child(ref(this.database), `userNames/${userName}`))\r\n    ).val();\r\n    if (exists === null) {\r\n      return false;\r\n    }\r\n    return exists.uid; // it might return true take a look at later\r\n  }\r\n\r\n  static async getUserEventIds(userName) {\r\n    let events = (\r\n      await get(child(ref(this.database), `userEvents/${userName}`))\r\n    ).val();\r\n    return Object.keys(events);\r\n  }\r\n\r\n  static deleteEvent(eventId) {\r\n    // Assuming that events are stored under 'events' node in the database\r\n    const eventRef = ref(db, 'events/' + eventId);\r\n    remove(eventRef)\r\n      .then(() => {\r\n        console.log(\"Event removed successfully\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing event: \", error);\r\n      });\r\n  }\r\n\r\n\r\n  static async getEventInfo(eventId) {\r\n    const eventSnapshot = await get(child(ref(this.database), `events/${eventId}`));\r\n    const eventInfo = eventSnapshot.val();\r\n  \r\n    if (eventInfo.privacy === \"Public\") {\r\n      const participantsSnapshot = await get(child(ref(this.database), `userNames`));\r\n      const participants = participantsSnapshot.val();\r\n      eventInfo.participants = participants;\r\n    } else {\r\n      const participantsSnapshot = await get(child(ref(this.database), `participantsOfEvent/${eventId}`));\r\n      const participants = participantsSnapshot.val();\r\n      eventInfo.participants = participants;\r\n    }\r\n  \r\n    eventInfo.id = eventId;\r\n  \r\n    return eventInfo;\r\n  }\r\n  \r\n  static async listenEventOptions(eventId,setState) {\r\n    onValue(ref(this.database, \"events/\" + eventId + \"/options\"), (snapshot) => {\r\n      const data = snapshot.val();\r\n      data.map((opt, index) => (opt[\"id\"] = index));\r\n      console.log(data);\r\n      setState(data);\r\n    });\r\n  }\r\n  static async setCustomDateOption(eventId,options,incomingOptions){\r\n    var index = options.length\r\n    \r\n    for(var i in [...Array(incomingOptions.length).keys()]){\r\n      console.log(i)\r\n      await set(ref(this.database,\"events/\" + eventId + \"/options/\" + `${index + (+i)}`),incomingOptions[i])\r\n    }\r\n\r\n    \r\n  }\r\n  static async getUserEventInfos(userName) {\r\n    // critical\r\n    let event_ids = Object.keys(\r\n      (await get(child(ref(this.database), `userEvents/${userName}`))).val()\r\n    );\r\n    let events_info = [];\r\n    event_ids.forEach((eventId) =>\r\n      events_info.push(this.getEventInfo(eventId))\r\n    );\r\n    ///events_info.forEach(event => console.log(event.title),\"asd\")\r\n    return events_info;\r\n  }\r\n\r\n  static async leaveEvent(eventId, username) {\r\n    set(\r\n      ref(this.database, \"participantsOfEvent/\" + eventId + \"/\" + username),\r\n      {}\r\n    );\r\n    set(ref(this.database, \"userEvents/\" + username + \"/\" + eventId), {});\r\n  }\r\n\r\n  static async endEvent(event_Id,optionId){\r\n     set(ref(this.database,\"events/\"+ event_Id + \"/isOpen\"),false);\r\n     set(ref(this.database,\"events/\"+ event_Id + \"/endOptionId\"),optionId);\r\n  }\r\n\r\n  static async submitVote(eventId, userName, votes) {\r\n    for (const date of Object.keys(votes)) {\r\n      console.log(`id : ${date} -> vote : ${votes[date]}`)\r\n      await set(\r\n        ref(\r\n          this.database,\r\n          \"participantsOfEvent/\" + eventId + \"/\" + userName + \"/\" + date\r\n        ),\r\n        votes[date]\r\n      );\r\n    }\r\n  }\r\n\r\n  static async getVotes(eventId) {\r\n    let votes = (\r\n      await get(child(ref(this.database), \"participantsOfEvent/\" + eventId))\r\n    ).val();\r\n    let comings = {};\r\n    let Ncomings = {};\r\n    let ifNeed = {};\r\n    for (const user of Object.keys(votes)) {\r\n      try {\r\n        votes[user].forEach((opt, index) => {\r\n          //console.log(opt,index);\r\n          switch (opt) {\r\n            case \"Coming\":\r\n              try {\r\n                comings[index].push(user);\r\n              } catch {\r\n                comings[index] = [user];\r\n              }\r\n\r\n              break;\r\n            case \"Not\":\r\n              try {\r\n                Ncomings[index].push(user);\r\n              } catch {\r\n                Ncomings[index] = [user];\r\n              }\r\n\r\n              break;\r\n            case \"If need\":\r\n              try {\r\n                ifNeed[index].push(user);\r\n              } catch {\r\n                ifNeed[index] = [user];\r\n              }\r\n          }\r\n        });\r\n      } catch {}\r\n    }\r\n\r\n    return { comings, Ncomings, ifNeed };\r\n  }\r\n}","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\pages\\SelectHour.jsx",["239"],[],"import React, { useEffect, useState } from \"react\";\r\nimport TimeKeeper from \"react-timekeeper\";\r\n\r\nfunction SelectHour({ name, keyy }) {\r\n  const date = new Date();\r\n  const minutes = (date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes())\r\n  const [time, setTime] = useState(`${date.getHours()}:${minutes}`);\r\n  const [showTime, setShowTime] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem(keyy,time);\r\n  },[]);\r\n\r\n  const onChangeHandler= (newTime)=>{\r\n    setTime(newTime.formatted24)\r\n    localStorage.setItem(keyy,newTime.formatted24);\r\n  }\r\n  const timeFunction = () => {\r\n    setShowTime(false);\r\n    localStorage.setItem(keyy,time);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      {showTime && (\r\n        <TimeKeeper\r\n          time={time}\r\n          onChange={onChangeHandler}\r\n          hour24Mode={true}\r\n          closeOnMinuteSelect={true}\r\n          onDoneClick={timeFunction}\r\n          switchToMinuteOnHourSelect\r\n        />\r\n      )}\r\n\r\n      {!showTime && (\r\n        <button\r\n          className=\"border rounded-md w-2/3 h-8\"\r\n          onClick={() => setShowTime(true)}\r\n        >\r\n          <span className=\"\">{time}</span>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default SelectHour;\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\DateOptionCard.jsx",["240"],[],"import { CalendarIcon, ClockIcon } from \"@heroicons/react/outline\";\r\nimport { ClockIcon as ClockIconSolid } from \"@heroicons/react/solid\";\r\n\r\nexport default function DateOptionCard(props) {\r\n  return (\r\n    <ul role=\"list\" className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\r\n      {props.options.map((option,index) => (\r\n        <li key={index} className=\"col-span-1 bg-white rounded-lg shadow divide-y divide-gray-200\">\r\n          <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\r\n            <div className=\"flex-1 truncate\">\r\n              <div className=\"flex items-center space-x-1\">\r\n              <CalendarIcon height={15} width={15}/>\r\n                <h3 className=\"text-gray-900 text-sm font-medium truncate\">\r\n                \r\n                  Date: {option.date}\r\n                </h3>\r\n                {/* <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-green-800 text-xs font-medium bg-green-100 rounded-full\">\r\n                  {person.role}\r\n                </span> */}\r\n              </div>\r\n              <div className=\"flex items-center space-x-1\">\r\n              <ClockIcon height={15} width={15}/>\r\n              <p className=\"mt-1 text-gray-500 text-sm md:text-clip flex-1\">{`Start Time: ${option.startTime}`}</p>\r\n              </div>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <ClockIconSolid height={15} width={15}/>\r\n              <p className=\"mt-1 text-gray-500 text-sm md:text-clip flex-1\">{`End Time: ${option.endTime}`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"-mt-px flex divide-x divide-gray-200\">\r\n              <div className=\"w-0 flex-1 flex\">\r\n                {/* <a\r\n                  href={`mailto:${person.email}`}\r\n                  className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-bl-lg hover:text-gray-500\"\r\n                >\r\n                  <MailIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  <span className=\"ml-3\">Email</span>\r\n                </a> */}\r\n              </div>\r\n              <div className=\"-ml-px w-0 flex-1 flex\">\r\n                {/* <a\r\n                  href={`tel:${person.telephone}`}\r\n                  className=\"relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500\"\r\n                >\r\n                  <PhoneIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  <span className=\"ml-3\">Call</span>\r\n                </a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\EventCard.jsx",["241","242","243"],[],"import { XIcon } from \"@heroicons/react/solid\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteModal from \"../UI/DeleteModal\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nconst EventCard = (props) => {\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const status = \"The date of this event has been set\"\r\n  // const handleSetShowDelete = () => {\r\n  //   setShowDelete(!showDelete);\r\n  // };\r\n\r\n  const clickHandler = () => {\r\n    setIsClicked(true);\r\n  };\r\n\r\n  if(props.event.options === undefined){\r\n    props.event.options = []\r\n  }\r\n  if(props.event.participants === null || props.event.participants === undefined){\r\n    props.event.participants = {}\r\n  }\r\n  return (\r\n    <>\r\n      {isClicked && (\r\n        <DeleteModal eventId={props.event.id} setIsClicked={setIsClicked} />\r\n      )}\r\n      <div\r\n        className=\"border\"\r\n        // onMouseEnter={handleSetShowDelete}\r\n        // onMouseLeave={handleSetShowDelete}\r\n      >\r\n        {showDelete && (\r\n          <button className=\"flex items-center\" onClick={clickHandler}>\r\n            <XIcon\r\n              className=\"w-7 h-7 text-gray-400 hover:text-red-500\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </button>\r\n        )}\r\n        \r\n          <button className=\"w-full flex items-center justify-between mt-2\">\r\n            <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\r\n            <button className=\"flex items-center\" onClick={clickHandler}>\r\n            <XIcon\r\n              className=\"w-7 h-7 text-gray-400 hover:text-red-500\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </button>\r\n              <div className=\"flex-1 truncate\">\r\n              <Link to={\"/eventPage\" + \"/\" + props.event.id} state={props}>\r\n                <div className=\"flex flex-col items-center space-x-3\">\r\n                {!(props.event.isOpen) && <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-gray-800 text-xs font-medium bg-red-100 rounded-full\">\r\n      {status}\r\n    </span>}\r\n                  <h3 className=\"text-gray-900 text-sm font-medium truncate\">\r\n                    {props.event.title}\r\n                  </h3>\r\n                  <p> {props.event.privacy}</p> {/* Display the event privacy here */}\r\n\r\n                 \r\n                  <h3 className=\"flex text-gray-900 text-sm font-medium truncate\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      class=\"h-6 w-6 mr-2\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                    >\r\n                      <path\r\n                        stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\"\r\n                        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n                      />\r\n                    </svg>\r\n                    {props.event.options.length}\r\n                  </h3>\r\n                </div>\r\n              </Link>\r\n              </div>\r\n            </div>\r\n          </button>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\VoteDateOptionCard.jsx",["244","245","246","247","248","249","250","251"],[],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  CheckIcon,\r\n  XIcon,\r\n  QuestionMarkCircleIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/solid\";\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport { ClockIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function VoteDateOption({\r\n  eventInfo,\r\n  selectedDateId,\r\n  optInfo,\r\n  handleSelectedDates,\r\n  comings,\r\n  Ncomings,\r\n  ifNeed,\r\n  userName,\r\n  creator,\r\n  Checked,\r\n}) {\r\n  const icons = {\r\n    coming: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"h-5 w-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"green\"\r\n        stroke-width=\"2\"\r\n      >\r\n        <path\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n        />\r\n      </svg>\r\n    ),\r\n    not: (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"h-5 w-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"red\"\r\n        stroke-width=\"2\"\r\n      >\r\n        <path\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n        />\r\n      </svg>\r\n    ),\r\n    if: <QuestionMarkCircleIcon className=\"w-5 h-5 text-orange-400\" />,\r\n  };\r\n\r\n  var showCheckBox;\r\n  if (eventInfo.creatorName != userName) {\r\n    showCheckBox = false;\r\n    if (selectedDateId == optInfo.id) {\r\n      showCheckBox = true;\r\n    }\r\n  } else {\r\n    showCheckBox = true;\r\n  }\r\n  //if its undefined we have to initilize as an array.\r\n  if (comings === undefined) {\r\n    comings = [];\r\n  }\r\n  if (Ncomings === undefined) {\r\n    Ncomings = [];\r\n  }\r\n  if (ifNeed === undefined) {\r\n    ifNeed = [];\r\n  }\r\n  const [status, setStatus] = useState(\r\n    comings.includes(userName)\r\n      ? \"Coming\"\r\n      : Ncomings.includes(userName)\r\n      ? \"Not coming\"\r\n      : ifNeed.includes(userName)\r\n      ? \"If need be\"\r\n      : \"Pending\"\r\n  );\r\n\r\n  const VotedOptionsHandler = (votedOption) => {\r\n    if (\r\n      (votedOption.isVoteYes === false) &\r\n      (votedOption.isVoteNo === false) &\r\n      (votedOption.isVoteIfNeedBe === false)\r\n    ) {\r\n      setStatus(\"Pending\");\r\n    } else if (votedOption.isVoteYes === true) {\r\n      setStatus(\"Coming\");\r\n    } else if (votedOption.isVoteNo === true) {\r\n      setStatus(\"Not coming\");\r\n    } else if (votedOption.isVoteIfNeedBe === true) {\r\n      setStatus(\"If need be\");\r\n    }\r\n  };\r\n\r\n  const [yesVote, setYesVote] = useState(0);\r\n  const [yesClicked, setYesClicked] = useState(comings.includes(userName));\r\n\r\n  const [NoVote, setNoVote] = useState(0);\r\n  const [NoClicked, setNoClicked] = useState(Ncomings.includes(userName));\r\n\r\n  const [ifNeedBe, setIfNeedBe] = useState(0);\r\n  const [ifNeedBeClicked, setIfNeedBeClicked] = useState(\r\n    ifNeed.includes(userName)\r\n  );\r\n\r\n  const [isChecked, setIsChecked] = useState(0);\r\n\r\n  let votedOption = {\r\n    ...optInfo,\r\n    isVoteYes: yesClicked,\r\n    isVoteNo: NoClicked,\r\n    isVoteIfNeedBe: ifNeedBeClicked,\r\n  };\r\n\r\n  const yesVoteHandler = (prevVote) => {\r\n    setNoClicked(false);\r\n    setIfNeedBeClicked(false);\r\n    setYesClicked(true);\r\n    setYesVote((prevVote) => {\r\n      if (yesClicked === true) {\r\n        setYesClicked(false);\r\n        return [parseInt(prevVote) - 1];\r\n      } else {\r\n        return [parseInt(prevVote) + 1];\r\n      }\r\n    });\r\n    votedOption.isVoteYes = !yesClicked;\r\n    votedOption.isVoteNo = false;\r\n    votedOption.isVoteIfNeedBe = false;\r\n    VotedOptionsHandler(votedOption);\r\n    handleSelectedDates(optInfo.id, \"Coming\");\r\n    //console.log(ifNeedBeClicked, NoClicked, yesClicked);\r\n  };\r\n\r\n  const checked = (event) => {\r\n    if (event.target.checked) {\r\n      Checked(1, optInfo.id);\r\n    } else {\r\n      Checked(0, optInfo.id);\r\n    }\r\n  };\r\n\r\n  const ifNeedBeVoteHandler = (prevVote) => {\r\n    setNoClicked(false);\r\n    setYesClicked(false);\r\n    setIfNeedBeClicked(true);\r\n    setIfNeedBe((prevVote) => {\r\n      if (ifNeedBeClicked === true) {\r\n        setIfNeedBeClicked(false);\r\n        return [parseInt(prevVote) - 1];\r\n      } else {\r\n        return [parseInt(prevVote) + 1];\r\n      }\r\n    });\r\n    votedOption.isVoteIfNeedBe = !ifNeedBeClicked;\r\n    votedOption.isVoteNo = false;\r\n    votedOption.isVoteYes = false;\r\n    VotedOptionsHandler(votedOption);\r\n    handleSelectedDates(optInfo.id, \"If need\");\r\n    //console.log(ifNeedBeClicked, NoClicked, yesClicked);\r\n  };\r\n\r\n  const noVoteHandler = (prevVote) => {\r\n    setYesClicked(false);\r\n    setIfNeedBeClicked(false);\r\n    setNoVote((prevVote) => {\r\n      if (NoClicked === true) {\r\n        setNoClicked(false);\r\n        return [parseInt(prevVote) - 1];\r\n      } else {\r\n        setNoClicked(true);\r\n        return [parseInt(prevVote) + 1];\r\n      }\r\n    });\r\n    votedOption.isVoteNo = !NoClicked;\r\n    votedOption.isVoteYes = false;\r\n    votedOption.isVoteIfNeedBe = false;\r\n    VotedOptionsHandler(votedOption);\r\n    handleSelectedDates(optInfo.id, \"Not\");\r\n    //console.log(ifNeedBeClicked, NoClicked, yesClicked);\r\n  };\r\n  let statusPart = (\r\n    <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-gray-800 text-xs font-medium bg-gray-100 rounded-full\">\r\n      {status}\r\n    </span>\r\n  );\r\n  if (status === \"Coming\") {\r\n    statusPart = (\r\n      <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-black-800 text-xs font-medium bg-green-100 rounded-full\">\r\n        {status}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  if (status === \"Not coming\") {\r\n    statusPart = (\r\n      <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-black-800 text-xs font-medium bg-red-100 rounded-full\">\r\n        {status}\r\n      </span>\r\n    );\r\n  }\r\n  if (status === \"If need be\") {\r\n    statusPart = (\r\n      <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-black-800 text-xs font-medium bg-yellow-100 rounded-full\">\r\n        {status}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul role=\"list\" className=\"col-span-1 px-2 md:p-4 \">\r\n      <li className=\" bg-white rounded-lg shadow divide-y divide-gray-200 mt-4\">\r\n        <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\r\n          <div className=\"flex-1 truncate\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              {!eventInfo.hideParticipants && (\r\n                <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-black-800 text-xs font-medium bg-blue-100 rounded-full\">\r\n                  {`Created by ${creator}`}\r\n                </span>\r\n              )}\r\n\r\n              {showCheckBox && (\r\n                <div>\r\n                  <input\r\n                    id=\"myCheck\"\r\n                    type=\"checkbox\"\r\n                    checked={selectedDateId === optInfo.id}\r\n                    onChange={checked}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">{statusPart}</div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              <CalendarIcon height={15} width={15} />\r\n              <h3 className=\"text-gray-900 text-sm font-medium truncate\">\r\n                Date: {optInfo.date}\r\n              </h3>\r\n              {/* <span className=\"flex-shrink-0 inline-block px-2 py-0.5 text-green-800 text-xs font-medium bg-green-100 rounded-full\">\r\n                  {person.role}\r\n                </span> */}\r\n            </div>\r\n            <div className=\"flex items-center space-x-1\">\r\n              <ClockIcon height={15} width={15} />\r\n              <p className=\"mt-1 text-gray-500 text-sm truncate\">\r\n                {optInfo.startTime} - {optInfo.endTime}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-3\">\r\n              {icons[\"coming\"]}\r\n              {comings.length}\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              {icons[\"not\"]}\r\n              {Ncomings.length}\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              {icons[\"if\"]}\r\n              {ifNeed.length}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1\">\r\n            {!eventInfo.hideParticipants && (\r\n              <ParticipantList\r\n                userName={userName}\r\n                comings={comings}\r\n                Ncomings={Ncomings}\r\n                ifNeed={ifNeed}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"-mt-px flex divide-x divide-gray-200\">\r\n            <div className=\"w-0 flex-1 flex\">\r\n              {yesClicked === true ? (\r\n                <button\r\n                  onClick={yesVoteHandler}\r\n                  className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-500 font-medium border bg-green-500\"\r\n                >\r\n                  <CheckIcon className=\"w-7 h-7\" aria-hidden=\"true\" />\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={yesVoteHandler}\r\n                  className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border hover:text-gray-500\"\r\n                >\r\n                  <CheckIcon\r\n                    className=\"w-7 h-7 text-gray-400 hover:text-green-500\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"-ml-px w-0 flex-1 flex\">\r\n              {NoClicked === true ? (\r\n                <button\r\n                  onClick={noVoteHandler}\r\n                  className=\"relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-500 font-medium border  bg-red-400\"\r\n                >\r\n                  <XIcon className=\"w-7 h-7\" aria-hidden=\"true\" />\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={noVoteHandler}\r\n                  className=\"relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-500 font-medium border hover:text-gray-500\"\r\n                >\r\n                  <XIcon\r\n                    className=\"w-7 h-7 text-gray-400 hover:text-red-500\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"-ml-px w-0 flex-1 flex\">\r\n              {ifNeedBeClicked === true ? (\r\n                <button\r\n                  onClick={ifNeedBeVoteHandler}\r\n                  className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-500 font-medium border bg-orange-400\"\r\n                >\r\n                  <QuestionMarkCircleIcon\r\n                    className=\"w-7 h-7\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={ifNeedBeVoteHandler}\r\n                  className=\"relative -mr-px w-0 flex-1 inline-flex justify-center py-4 text-sm text-gray-700 font-medium border \"\r\n                >\r\n                  <QuestionMarkCircleIcon\r\n                    className=\"w-7 h-7 text-gray-400 hover:text-orange-400\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\ChattBox.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Notification.jsx",["252"],[],"import { Fragment, useEffect, useState } from 'react'\r\nimport { Transition } from '@headlessui/react'\r\nimport { CheckCircleIcon,ExclamationCircleIcon } from '@heroicons/react/outline'\r\nimport { XIcon } from '@heroicons/react/solid'\r\nexport const Notification = ({message,title,status,disappearEvents})=> {\r\n    \r\n\r\n    const [show, setShow] = useState(true)\r\n    const [disappear,disableGreetingMessage] = disappearEvents;\r\n  \r\n    useEffect(()=>{\r\n      if(disappear){\r\n        const timeOut = setTimeout(()=>{\r\n          setShow(false);\r\n      },3000)\r\n\r\n      return ()=>{\r\n          clearTimeout(timeOut);\r\n          disableGreetingMessage(false); // we did this every time when the component is unmounted. I should change it later for different status it should be checked just for \"login\" \r\n      }\r\n      };\r\n    },[])\r\n\r\n\r\n    const Icon = status=== \"Succ\" ? <CheckCircleIcon className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\" /> : <ExclamationCircleIcon className=\"h-6 w-6 text-red-400\" aria-hidden=\"true\" />\r\n\r\n    return(\r\n        <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\r\n          {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\r\n          <Transition\r\n            show={show}\r\n            as={Fragment}\r\n            enter=\"transform ease-out duration-300 transition\"\r\n            enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\r\n            enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\r\n            leave=\"transition ease-in duration-100\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\r\n              <div className=\"p-4\">\r\n                <div className=\"flex items-start\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    {Icon}\r\n                  </div>\r\n                  <div className=\"ml-3 w-0 flex-1 pt-0.5\">\r\n                    <p className=\"text-sm font-medium text-gray-900\">{title}</p>\r\n                    <p className=\"mt-1 text-sm text-gray-500\">{message}</p>\r\n                  </div>\r\n                  <div className=\"ml-4 flex-shrink-0 flex\">\r\n                    <button\r\n                      className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                      onClick={() => {\r\n                        setShow(false)\r\n                      }}\r\n                    >\r\n                      <span className=\"sr-only\">Close</span>\r\n                      <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition>\r\n        </div>\r\n    );\r\n}","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Alert.jsx",["253","254"],[],"import { XCircleIcon,CheckCircleIcon  } from '@heroicons/react/solid'\r\n\r\nexport default function Alert({title,messages,status}) {\r\n\r\n  const color = status == \"succ\" ? `green` : `red`;\r\n  const Icon = status === \"succ\" ? <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" /> :<XCircleIcon className=\"h-10 w-10 text-red-400\" aria-hidden=\"true\" />;\r\n  return (\r\n    <div className={`rounded-md bg-${color}-100 p-4`}>\r\n      <div className=\"flex\">\r\n        <div className=\"flex-shrink-0\">\r\n          {Icon}\r\n        </div>\r\n        <div className=\"ml-3\">\r\n          <h3 className={`text-sm font-medium text-${color}-800`}>{title}</h3>\r\n          <div className={`mt-2 text-sm text-${color}-700`}>\r\n            <ul role=\"list\" className=\"list-disc pl-5 space-y-1\">\r\n              {messages.map((message,index) => <li key={`li${index}`}>{message}</li>)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\RedirectingBanner.jsx",["255"],[],"import { SpeakerphoneIcon, XIcon,ArrowCircleRightIcon } from '@heroicons/react/outline'\r\n\r\nexport default function RedirectinBanner() {\r\n  return (\r\n    <div className=\"bg-blue-600\">\r\n      <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between flex-wrap\">\r\n          <div className=\"w-0 flex-1 flex items-center\">\r\n            <span className=\"flex p-2 rounded-lg bg-blue-800\">\r\n              <ArrowCircleRightIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n            </span>\r\n            <p className=\"ml-3 font-medium text-white truncate\">\r\n              <span className=\"md:hidden\">Redirecting to the Home...</span>\r\n              <span className=\"hidden md:inline\">You are being redirected to the Home page. Wait a second...</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"order-3 mt-2 flex-shrink-0 w-full sm:order-2 sm:mt-0 sm:w-auto\">\r\n            \r\n          </div>\r\n          <div className=\"order-2 flex-shrink-0 sm:order-3 sm:ml-3\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"-mr-1 flex p-2 rounded-md hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-white sm:-mr-2\"\r\n            >\r\n              <span className=\"sr-only\">Close</span>\r\n              <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Banner.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\Modal.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\FriendLists.jsx",["256","257","258"],[],"import Banner from \"./Banner\"\r\nimport EmptyFriendLists from \"./EmptyFriendList\"\r\n\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function FriendLists({friends,addHandler,participants,isLoading}) {\r\n\r\n    const bgColors = ['bg-pink-600','bg-purple-600','bg-yellow-500','bg-green-500']\r\n  \r\n    return (\r\n    <div>\r\n       \r\n      {!(isLoading) && friends.length != 0 &&<>\r\n      <h2 className=\"mt-3 text-black-500 text-xs font-medium uppercase tracking-wide\"><strong>You can add participants easily just by clicking on your friends !</strong></h2>\r\n      <ul role=\"list\" className=\"mt-3 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        {friends.map((friend,index) => (\r\n        ( !(participants.includes(friend)) && <button onClick={()=> {addHandler(friend)}} type=\"button\">\r\n          <li key={index} className=\"col-span-1 flex shadow-sm rounded-md\">\r\n            <div\r\n              className={classNames(\r\n                bgColors[Math.floor(Math.random() * 4)],\r\n                'flex-shrink-0 flex items-center justify-center w-16 text-white text-sm font-medium rounded-l-md'\r\n              )}\r\n            >\r\n              {friend[0].toUpperCase()}\r\n            </div>\r\n            <div className=\"flex-1 flex items-center justify-between border-t border-r border-b border-gray-200 bg-white rounded-r-md truncate\">\r\n              <div className=\"flex-1 px-4 py-2 text-sm truncate\">\r\n               {friend}\r\n              </div>\r\n              \r\n            </div>\r\n          </li>\r\n          </button>)\r\n        ))}\r\n      </ul></>}\r\n      {!(isLoading) && friends.length == 0 && <EmptyFriendLists/>}\r\n      {isLoading && <Banner message={\"We are gettin your friends...\"}/>}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\FriendList.jsx",["259","260","261"],[],"import { CheckIcon, XIcon } from \"@heroicons/react/solid\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { SocialHandler } from \"../database/SocialHandler\";\r\nimport Banner from \"./Banner\";\r\nimport EmptyFriend from \"./EmptyFriend\";\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function FriendList({ username }) {\r\n  const [requests, setRequests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [empty, setEmpty] = useState(requests.length == 0);\r\n  const removePerson = (personIndex) => {\r\n    setRequests(requests.splice(personIndex, personIndex));\r\n  };\r\n  useEffect(async () => {\r\n    var res = await SocialHandler.getFriendRequests(username);\r\n    if (res != null) {\r\n      var keys = Object.keys(res);\r\n      setRequests(keys);\r\n      setEmpty(false);\r\n    } else {\r\n      setEmpty(true);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      {isLoading ? (\r\n        <Banner message={\"Recieving friend requests...\"} />\r\n      ) : empty ? (\r\n        <EmptyFriend />\r\n      ) : (\r\n        <div className=\"px-4 sm:px-6 lg:px-8 -ml-10\">\r\n          <div className=\"sm:flex sm:items-center\">\r\n            <div className=\"sm:flex-auto\">\r\n              <h1 className=\"text-xl font-semibold text-gray-900\">\r\n                Friend Requests\r\n              </h1>\r\n              <p className=\"mt-2 text-sm text-gray-700\">\r\n                List of all friend requests.\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\"></div>\r\n          </div>\r\n          <div className=\"mt-8 flex flex-col\">\r\n            <div className=\"-my-2 -mx-4 sm:-mx-6 lg:-mx-8\">\r\n              <div className=\"inline-block min-w-5 py-2 align-middle\">\r\n                <div className=\"shadow-sm ring-1 ring-black ring-opacity-5\">\r\n                  <table\r\n                    className=\"min-w-5 border-separate\"\r\n                    style={{ borderSpacing: 20 }}\r\n                  >\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"flex justify-center sticky top-0 z-10 border-b border-gray-300 bg-gray-50 bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8\"\r\n                        >\r\n                          Name\r\n                        </th>\r\n\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sticky top-0 z-10 border-b border-gray-300 bg-gray-50 bg-opacity-75 px-3 py-3.5 text-left text-sm font-semibold text-green-900 backdrop-blur backdrop-filter lg:table-cell\"\r\n                        >\r\n                          Accept\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sticky top-0 z-10 border-b border-gray-300 bg-gray-50 bg-opacity-75 px-3 py-3.5 text-left text-sm font-semibold text-red-900 backdrop-blur backdrop-filter\"\r\n                        >\r\n                          Refuse\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white\">\r\n                      {requests.map((person, personIdx) => (\r\n                        <tr key={personIdx}>\r\n                          <td\r\n                            className={classNames(\r\n                              personIdx !== requests.length - 1\r\n                                ? \"border-b border-gray-200\"\r\n                                : \"\",\r\n                              \"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6 lg:pl-8\"\r\n                            )}\r\n                          >\r\n                            {person}\r\n                          </td>\r\n                          <td\r\n                            className={classNames(\r\n                              personIdx !== requests.length - 1\r\n                                ? \"border-b border-gray-200\"\r\n                                : \"\",\r\n                              \"whitespace-nowrap px-3 py-4 text-sm text-gray-500 sm:table-cell\"\r\n                            )}\r\n                          >\r\n                            <button\r\n                              className=\"flex items-center\"\r\n                              onClick={() => {\r\n                                SocialHandler.acceptFriend(username, person);\r\n                                removePerson(personIdx);\r\n                              }}\r\n                            >\r\n                              <CheckIcon\r\n                                className=\"w-7 h-7 text-gray-400 hover:text-green-500\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                            </button>\r\n                          </td>\r\n                          <td\r\n                            className={classNames(\r\n                              personIdx !== requests.length - 1\r\n                                ? \"border-b border-gray-200\"\r\n                                : \"\",\r\n                              \"whitespace-nowrap px-3 py-4 text-sm text-gray-500 lg:table-cell\"\r\n                            )}\r\n                          >\r\n                            <button\r\n                              className=\"flex items-center\"\r\n                              onClick={() => {\r\n                                SocialHandler.removeFriendRequest(\r\n                                  username,\r\n                                  person\r\n                                );\r\n                                removePerson(personIdx);\r\n                              }}\r\n                            >\r\n                              <XIcon\r\n                                className=\"w-7 h-7 text-gray-400 hover:text-red-500\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\DeleteModal.jsx",["262"],[],"/* This example requires Tailwind CSS v2.0+ */\r\nimport { Fragment, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ExclamationIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport { DatabaseHandler } from \"../database/DatabaseHandler\";\r\n\r\nexport default function DeleteModal(props) {\r\n  const [open, setOpen] = useState(true);\r\n  \r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const deleteHandler = () => {\r\n    DatabaseHandler.deleteEvent(props.eventId);\r\n    setOpen(false);\r\n    window.location.reload();\r\n    props.setIsClicked(false);\r\n  };\r\n  \r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        onClose={()=>{setOpen(false)\r\n        props.setIsClicked(false)}}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"relative inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\r\n              <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white-500\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                    props.setIsClicked(false);\r\n                  }}\r\n                >\r\n                  <span className=\"sr-only\">Close</span>\r\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"sm:flex sm:items-start\">\r\n                <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                  <ExclamationIcon\r\n                    className=\"h-6 w-6 text-red-600\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                  <Dialog.Title\r\n                    as=\"h3\"\r\n                    className=\"text-lg leading-6 font-medium text-gray-900\"\r\n                  >\r\n                    Delete/Leave Event\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      Are you sure you want to delete this event ? This action\r\n                      cannot be undone.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={deleteHandler}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm\"\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                    props.setIsClicked(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\ParticipantList.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\components\\Chat.jsx",[],[],"C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyFriendList.jsx",["263"],[],"\r\nexport default function EmptyFriendLists() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <div className=\"mx-auto h-12 w-12 text-gray-400\"> <img src=\"https://img.icons8.com/external-wanicon-lineal-color-wanicon/64/undefined/external-friend-friendship-wanicon-lineal-color-wanicon.png\"/></div>\r\n          \r\n        \r\n        \r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">{\"Friend List is empty\"}</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">{\"You have no friend :(\"}</p>\r\n        </div>\r\n    )\r\n  }\r\n  ","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyFriend.jsx",["264"],[],"\r\nexport default function EmptyFriend() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <div className=\"mx-auto h-12 w-12 text-gray-400\"> <img src=\"https://img.icons8.com/external-wanicon-lineal-color-wanicon/64/undefined/external-friend-friendship-wanicon-lineal-color-wanicon.png\"/></div>\r\n          \r\n        \r\n        \r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">You have no friend request!</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">Wait for someone to add you</p>\r\n        </div>\r\n    )\r\n  }\r\n  ","C:\\Users\\ecaga\\Masaüstü\\Thesis\\src\\UI\\EmptyMessage.jsx",["265"],[],"\r\nexport default function EmptyMessage() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"mx-auto h-12 w-12 text-gray-400\"> <img src=\"https://img.icons8.com/nolan/64/topic.png\"/></div>\r\n        \r\n       \r\n      \r\n      <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No Messages !</h3>\r\n      <p className=\"mt-1 text-sm text-gray-500\">Appearently, nobody has sent a message yet. Let's send one !</p>\r\n      </div>\r\n  )\r\n}\r\n",{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":1,"column":29,"nodeType":"272","messageId":"273","endLine":1,"endColumn":37},{"ruleId":"270","severity":1,"message":"274","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":12},{"ruleId":"270","severity":1,"message":"275","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":21},{"ruleId":"270","severity":1,"message":"276","line":37,"column":15,"nodeType":"272","messageId":"273","endLine":37,"endColumn":20},{"ruleId":"270","severity":1,"message":"277","line":63,"column":15,"nodeType":"272","messageId":"273","endLine":63,"endColumn":20},{"ruleId":"270","severity":1,"message":"278","line":65,"column":15,"nodeType":"272","messageId":"273","endLine":65,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":72,"column":6,"nodeType":"281","endLine":72,"endColumn":8,"suggestions":"282"},{"ruleId":"270","severity":1,"message":"276","line":117,"column":15,"nodeType":"272","messageId":"273","endLine":117,"endColumn":20},{"ruleId":"270","severity":1,"message":"283","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":14},{"ruleId":"270","severity":1,"message":"284","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":19},{"ruleId":"270","severity":1,"message":"285","line":13,"column":9,"nodeType":"272","messageId":"273","endLine":13,"endColumn":23},{"ruleId":"279","severity":1,"message":"286","line":63,"column":6,"nodeType":"281","endLine":63,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":85,"column":17,"nodeType":"290","endLine":85,"endColumn":80},{"ruleId":"291","severity":1,"message":"292","line":131,"column":17,"nodeType":"290","endLine":134,"endColumn":18},{"ruleId":"270","severity":1,"message":"293","line":16,"column":9,"nodeType":"272","messageId":"273","endLine":16,"endColumn":17},{"ruleId":"270","severity":1,"message":"294","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":19},{"ruleId":"270","severity":1,"message":"295","line":23,"column":9,"nodeType":"272","messageId":"273","endLine":23,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":29,"column":27,"nodeType":"298","messageId":"299","endLine":29,"endColumn":29},{"ruleId":"279","severity":1,"message":"300","line":43,"column":13,"nodeType":"301","endLine":53,"endColumn":4},{"ruleId":"296","severity":1,"message":"302","line":46,"column":30,"nodeType":"298","messageId":"299","endLine":46,"endColumn":32},{"ruleId":"279","severity":1,"message":"303","line":53,"column":6,"nodeType":"281","endLine":53,"endColumn":8,"suggestions":"304"},{"ruleId":"296","severity":1,"message":"297","line":59,"column":28,"nodeType":"298","messageId":"299","endLine":59,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":300,"column":18,"nodeType":"298","messageId":"299","endLine":300,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":314,"column":32,"nodeType":"298","messageId":"307","endLine":314,"endColumn":33},{"ruleId":"279","severity":1,"message":"300","line":30,"column":13,"nodeType":"301","endLine":36,"endColumn":4},{"ruleId":"279","severity":1,"message":"308","line":36,"column":6,"nodeType":"281","endLine":36,"endColumn":8,"suggestions":"309"},{"ruleId":"270","severity":1,"message":"310","line":38,"column":7,"nodeType":"272","messageId":"273","endLine":38,"endColumn":14},{"ruleId":"296","severity":1,"message":"302","line":70,"column":51,"nodeType":"298","messageId":"299","endLine":70,"endColumn":53},{"ruleId":"296","severity":1,"message":"302","line":71,"column":30,"nodeType":"298","messageId":"299","endLine":71,"endColumn":32},{"ruleId":"270","severity":1,"message":"311","line":119,"column":9,"nodeType":"272","messageId":"273","endLine":119,"endColumn":25},{"ruleId":"270","severity":1,"message":"312","line":128,"column":9,"nodeType":"272","messageId":"273","endLine":128,"endColumn":27},{"ruleId":"270","severity":1,"message":"313","line":134,"column":10,"nodeType":"272","messageId":"273","endLine":134,"endColumn":29},{"ruleId":"270","severity":1,"message":"314","line":144,"column":9,"nodeType":"272","messageId":"273","endLine":144,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":46,"column":33,"nodeType":"298","messageId":"299","endLine":46,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":47,"column":31,"nodeType":"298","messageId":"299","endLine":47,"endColumn":33},{"ruleId":"270","severity":1,"message":"315","line":1,"column":10,"nodeType":"272","messageId":"273","endLine":1,"endColumn":13},{"ruleId":"270","severity":1,"message":"316","line":2,"column":17,"nodeType":"272","messageId":"273","endLine":2,"endColumn":26},{"ruleId":"270","severity":1,"message":"317","line":15,"column":10,"nodeType":"272","messageId":"273","endLine":15,"endColumn":18},{"ruleId":"270","severity":1,"message":"318","line":15,"column":20,"nodeType":"272","messageId":"273","endLine":15,"endColumn":31},{"ruleId":"270","severity":1,"message":"319","line":3,"column":24,"nodeType":"272","messageId":"273","endLine":3,"endColumn":31},{"ruleId":"270","severity":1,"message":"320","line":3,"column":32,"nodeType":"272","messageId":"273","endLine":3,"endColumn":38},{"ruleId":"270","severity":1,"message":"321","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":8},{"ruleId":"270","severity":1,"message":"322","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":9},{"ruleId":"305","severity":1,"message":"306","line":55,"column":59,"nodeType":"298","messageId":"307","endLine":55,"endColumn":60},{"ruleId":"270","severity":1,"message":"322","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":9},{"ruleId":"270","severity":1,"message":"323","line":58,"column":11,"nodeType":"272","messageId":"273","endLine":58,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":96,"column":19,"nodeType":"298","messageId":"299","endLine":96,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":175,"column":69,"nodeType":"298","messageId":"307","endLine":175,"endColumn":70},{"ruleId":"324","severity":1,"message":"325","line":230,"column":11,"nodeType":"326","messageId":"327","endLine":253,"endColumn":12},{"ruleId":"279","severity":1,"message":"328","line":12,"column":5,"nodeType":"281","endLine":12,"endColumn":7,"suggestions":"329"},{"ruleId":"291","severity":1,"message":"292","line":6,"column":5,"nodeType":"290","endLine":6,"endColumn":86},{"ruleId":"270","severity":1,"message":"330","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":13},{"ruleId":"270","severity":1,"message":"331","line":8,"column":22,"nodeType":"272","messageId":"273","endLine":8,"endColumn":35},{"ruleId":"305","severity":1,"message":"306","line":53,"column":38,"nodeType":"298","messageId":"307","endLine":53,"endColumn":39},{"ruleId":"296","severity":1,"message":"302","line":61,"column":29,"nodeType":"298","messageId":"299","endLine":61,"endColumn":31},{"ruleId":"296","severity":1,"message":"297","line":63,"column":24,"nodeType":"298","messageId":"299","endLine":63,"endColumn":26},{"ruleId":"270","severity":1,"message":"332","line":105,"column":10,"nodeType":"272","messageId":"273","endLine":105,"endColumn":17},{"ruleId":"270","severity":1,"message":"333","line":108,"column":10,"nodeType":"272","messageId":"273","endLine":108,"endColumn":16},{"ruleId":"270","severity":1,"message":"334","line":111,"column":10,"nodeType":"272","messageId":"273","endLine":111,"endColumn":18},{"ruleId":"270","severity":1,"message":"295","line":116,"column":10,"nodeType":"272","messageId":"273","endLine":116,"endColumn":19},{"ruleId":"270","severity":1,"message":"335","line":116,"column":21,"nodeType":"272","messageId":"273","endLine":116,"endColumn":33},{"ruleId":"291","severity":1,"message":"292","line":221,"column":5,"nodeType":"290","endLine":221,"endColumn":57},{"ruleId":"279","severity":1,"message":"336","line":22,"column":7,"nodeType":"281","endLine":22,"endColumn":9,"suggestions":"337"},{"ruleId":"296","severity":1,"message":"297","line":5,"column":24,"nodeType":"298","messageId":"299","endLine":5,"endColumn":26},{"ruleId":"291","severity":1,"message":"292","line":16,"column":13,"nodeType":"290","endLine":16,"endColumn":66},{"ruleId":"270","severity":1,"message":"338","line":1,"column":10,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"296","severity":1,"message":"302","line":16,"column":39,"nodeType":"298","messageId":"299","endLine":16,"endColumn":41},{"ruleId":"291","severity":1,"message":"292","line":18,"column":7,"nodeType":"290","endLine":18,"endColumn":102},{"ruleId":"296","severity":1,"message":"297","line":40,"column":39,"nodeType":"298","messageId":"299","endLine":40,"endColumn":41},{"ruleId":"296","severity":1,"message":"297","line":14,"column":54,"nodeType":"298","messageId":"299","endLine":14,"endColumn":56},{"ruleId":"279","severity":1,"message":"300","line":18,"column":13,"nodeType":"301","endLine":28,"endColumn":4},{"ruleId":"279","severity":1,"message":"339","line":28,"column":6,"nodeType":"281","endLine":28,"endColumn":8,"suggestions":"340"},{"ruleId":"270","severity":1,"message":"341","line":10,"column":9,"nodeType":"272","messageId":"273","endLine":10,"endColumn":17},{"ruleId":"342","severity":1,"message":"343","line":5,"column":59,"nodeType":"290","endLine":5,"endColumn":205},{"ruleId":"342","severity":1,"message":"343","line":5,"column":59,"nodeType":"290","endLine":5,"endColumn":205},{"ruleId":"342","severity":1,"message":"343","line":5,"column":57,"nodeType":"290","endLine":5,"endColumn":111},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'signInWithRedirect' is defined but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCtx', 'error', and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["346"],"'Navbar' is defined but never used.","'AuthContext' is defined but never used.","'onClickHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.userName'. Either include it or remove the dependency array.",["347"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","'navigate' is assigned a value but never used.","'useParams' is defined but never used.","'isChecked' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'eventInfo'. Either include it or remove the dependency array.",["348"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["349"],"'counter' is assigned a value but never used.","'CB1ChangeHandler' is assigned a value but never used.","'limitChangeHandler' is assigned a value but never used.","'enteredParticipants' is assigned a value but never used.","'CB2ChangeHandler' is assigned a value but never used.","'set' is defined but never used.","'useEffect' is defined but never used.","'requests' is assigned a value but never used.","'setRequests' is assigned a value but never used.","'getApps' is defined but never used.","'getApp' is defined but never used.","'child' is defined but never used.","'update' is defined but never used.","'db_event_node' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'keyy' and 'time'. Either include them or remove the dependency array.",["350"],"'Modal' is defined but never used.","'setShowDelete' is assigned a value but never used.","'yesVote' is assigned a value but never used.","'NoVote' is assigned a value but never used.","'ifNeedBe' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'disableGreetingMessage' and 'disappear'. Either include them or remove the dependency array.",["351"],"'SpeakerphoneIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["352"],"'userInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},"Update the dependencies array to be: [authCtx, error, navigate]",{"range":"367","text":"368"},"Update the dependencies array to be: [userInfo.userName]",{"range":"369","text":"370"},"Update the dependencies array to be: [eventInfo]",{"range":"371","text":"372"},"Update the dependencies array to be: [userInfo]",{"range":"373","text":"374"},"Update the dependencies array to be: [keyy, time]",{"range":"375","text":"376"},"Update the dependencies array to be: [disableGreetingMessage, disappear]",{"range":"377","text":"378"},"Update the dependencies array to be: [username]",{"range":"379","text":"380"},[2312,2314],"[authCtx, error, navigate]",[2029,2031],"[userInfo.userName]",[1971,1973],"[eventInfo]",[1485,1487],"[userInfo]",[441,443],"[keyy, time]",[822,824],"[disableGreetingMessage, disappear]",[938,940],"[username]"]